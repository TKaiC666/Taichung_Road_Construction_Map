{"version":3,"sources":["component/CardMini.js","component/Map.js","component/Card.js","component/CloseButton.js","component/Pagination.js","component/Selectors.js","component/InfoBlock.js","component/InfoButton.js","component/MakerMessage.js","component/TaichungRCIApp.js","index.js"],"names":["CardMini","props","data","value","_jsxs","className","children","_jsx","concat","workingState","pipeType","date","start","year","month","day","end","constructionType","title","distriction","address","mapStyle","featureType","elementType","stylers","visibility","color","lightness","polygonOptions","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","clustersOptions","styles","textSize","height","width","url","process","Map","gridSize","setGridSize","useState","constructionsData","mapParameters","closeInfoBlock","setMapParameters","isMobile","makerMessage","userLocation","mapRef","useRef","isClusterWork","length","renderCluster","useMemo","renderMarker","cluster","markersNum","Array","from","_","index","map","i","Math","floor","coordinate","lat","lng","Marker","position","Number","onClick","newCenter","current","getCenter","toJSON","center","polygon","zoom","selectMarker","closeInfoWindow","handleMarkerClick","clusterer","noClustererRedraw","icon","scaledSize","MarkerClusterer","averageCenter","options","id","LoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","minZoom","maxZoom","disableDefaultUI","onLoad","handleMapOnLoad","onZoomChanged","changeGridSize","size","isInfoWindowShow","bool","InfoWindow","pixelOffset","window","google","maps","Size","onCloseClick","handleInfoWindowOnCloseClick","Polygon","path","Card","showLess","setShowLess","style","handleLocationData","randomNum","random","applicationNumber","licenseNumber","applicant","contractor","name","phone","personInCharge","CloseButton","handleCloseClick","handleMakerMessageClick","handleClick","undefined","Pagination","margin","pageBtns","pageIndex","handleBtnClick","handlePaginationClick","returnElement","maxPageIndex","focusPage","pageBtnsArr","selectValue","document","getElementById","onChange","e","target","pages","minPageIndex","Selectors","dateRange","setDateRange","startDate","endDate","dateOnPicker","setDateOnPicker","setSelectValue","dist","condition","setCondition","setPageIndex","INITAIL","useCallback","node","setCSSChosenValue","previousElementSibling","registerLocale","zh_TW","useEffect","getSelectValue","element","arguments","dataset","chosen","addZero2String","time","_time","toString","clearMapInfo","convertWorkingState","state","workingStateArr","distArr","defaultValue","_dateOnPicker","stack","prevState","indexOf","push","filter","DatePicker","locale","wrapperClassName","placeholderText","dateFormat","selectsRange","minDate","Date","Object","values","maxDate","isClearable","shouldCloseOnSelect","update","getFullYear","getMonth","getDate","_dist","_workingState","onFocus","blur","InfoBlock","cardsNum","arr","x","scrollIntoView","getCSSState","paddingTop","backgroundColor","option","marginBottom","InfoButton","handleLocationClick","display","MakerMessage","src","alt","href","rel","TaichungRCIApp","setIsMobile","setUserLocation","setCloseInfoBlock","setMakerMessage","setConstructionsData","changeInfoWindowHeight","isWidthUnder","addEventListener","findUserLocation","initialInfoBlockDisplay","navigator","geolocation","getCurrentPosition","_mapParameters","coords","latitude","longitude","handleUserLocation","console","log","documentElement","setProperty","innerHeight","innerWidth","convertDate2Num","parseInt","sliceData","_data","newData","slice","fetchData","reconstructData","convertedPart","convertStringCoor2Num","locationObject","substring","coordArray","split","splitPolygonData","convertData","fetch","then","response","timeEnd","status","text","Error","error","handleData","JSON","parse","catch","message","filteredData","object","anotherCondition","filteringData","selectorsOptions","_options","_closeInfoBlock","_makerMessage","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.78c00416.chunk.js","sourcesContent":["\nconst CardMini = (props)=>{\n    let data = props.value;\n    return(\n        <div className='cardMini'>\n            <div className='title'>\n                <div className={`state inlineBlock ${data.workingState === '是' ? 'working' : 'notWorking'}`}>\n                    {data.workingState === '是' ? '施工中' : '未施工'}\n                </div>\n                <div className='pipeType inlineBlock'>\n                    {data.pipeType}\n                </div>\n            </div>\n            <div className='title'>\n                <div className='date'>\n                    <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span>\n                    <i className=\"fas fa-caret-right fa-lg\"/>\n                    <span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\n                </div>\n            </div>\n            <div>\n                <div className='item'>案件類別</div>\n                <div className='data'>{data.constructionType}</div>\n            </div>\n            <div>\n                <div className='item'>工程名稱</div>\n                <div className='data'>{data.title}</div>\n            </div>\n            <div>\n                <div className='item'>地點</div>\n                <div className='data last'>{data.distriction + data.address}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default CardMini;","import React, { useMemo, useRef, useState } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  InfoWindow,\n  MarkerClusterer,\n  Marker,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport CardMini from \"./CardMini\";\n\nconst Map = (props) => {\n  const [gridSize, setGridSize] = useState(60);\n  const {\n    constructionsData,\n    mapParameters,\n    closeInfoBlock,\n    setMapParameters,\n    isMobile,\n    makerMessage,\n    userLocation,\n  } = props;\n  const mapRef = useRef(null);\n  let isClusterWork =\n    constructionsData !== null && constructionsData.length !== 0 ? true : false;\n\n  const changeGridSize = () => {\n    let size = null;\n    if (!mapRef.current || mapRef.current.zoom <= 18) size = 60;\n    else if (mapRef.current.zoom > 18) size = 1;\n    setGridSize(size);\n  };\n\n  const handleMapOnLoad = (map) => {\n    mapRef.current = map;\n  };\n\n  const handleInfoWindowOnCloseClick = () => {\n    setMapParameters({\n      center: mapParameters.center,\n      polygon: mapParameters.polygon,\n      zoom: mapParameters.zoom,\n      selectMarker: null,\n      closeInfoWindow: true,\n    });\n  };\n\n  const isInfoWindowShow = () => {\n    let bool = false;\n    if (mapParameters.closeInfoWindow === true) bool = false;\n    else if (mapParameters.selectMarker !== null) bool = true;\n    return bool;\n  };\n\n  const renderCluster = useMemo(() => {\n    const handleMarkerClick = (i) => {\n      // center = mapRef.current.center;\n      let data = constructionsData[Math.floor(i / 10)][i % 10];\n      let newCenter = mapRef.current.getCenter().toJSON();\n\n      setMapParameters({\n        center: newCenter,\n        polygon: data.coordinate.polygon,\n        zoom: mapParameters.zoom,\n        selectMarker: data,\n        closeInfoWindow: false,\n      });\n    };\n\n    const renderMarker = (cluster) => {\n      let markersNum =\n        (constructionsData.length - 1) * 10 +\n        constructionsData[constructionsData.length - 1].length;\n      let markers = Array.from({ length: markersNum }, (_, index) => index);\n      return markers.map(\n        (i) =>\n          constructionsData[Math.floor(i / 10)][i % 10].coordinate.lat !== 0 &&\n          constructionsData[Math.floor(i / 10)][i % 10].coordinate.lng !==\n            0 && (\n            <Marker\n              key={\"marker_\" + i}\n              position={{\n                lat: Number(\n                  constructionsData[Math.floor(i / 10)][i % 10].coordinate.lat\n                ),\n                lng: Number(\n                  constructionsData[Math.floor(i / 10)][i % 10].coordinate.lng\n                ),\n              }}\n              onClick={() => handleMarkerClick(i)}\n              clusterer={cluster}\n              noClustererRedraw={true}\n              icon={\n                constructionsData[Math.floor(i / 10)][i % 10].workingState ===\n                \"是\"\n                  ? {\n                      url: process.env.PUBLIC_URL + \"/img/marker/cone.png\",\n                      scaledSize: { width: 37, height: 37 },\n                    }\n                  : {\n                      url: process.env.PUBLIC_URL + \"/img/marker/cone_gray.png\",\n                      scaledSize: { width: 37, height: 37 },\n                    }\n              }\n            />\n          )\n      );\n    };\n\n    return (\n      isClusterWork && (\n        <MarkerClusterer\n          key=\"markerClusterer\"\n          averageCenter={true}\n          options={clustersOptions}\n          gridSize={gridSize}\n        >\n          {(cluster) => renderMarker(cluster)}\n        </MarkerClusterer>\n      )\n    );\n  }, [\n    constructionsData,\n    isClusterWork,\n    gridSize,\n    mapParameters,\n    setMapParameters,\n  ]);\n\n  const mapCoverState = () => {\n    if (constructionsData === null) return \"open\";\n    else if (isMobile) {\n      if (closeInfoBlock === null && makerMessage === null) return \"close\";\n      else if (closeInfoBlock === false || makerMessage === true) return \"open\";\n      else if (closeInfoBlock === true || makerMessage === false)\n        return \"close\";\n    } else {\n      return \"close\";\n    }\n  };\n\n  return (\n    <div className=\"mapContainer\">\n      <div id=\"mapCover\" className={`mapCover ${mapCoverState()}`} />\n      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAP_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={{\n            width: \"100%\",\n            height: \"inherit\",\n          }}\n          zoom={mapParameters.zoom}\n          center={mapParameters.center}\n          // center={{lat : mapParameters.center.lat, lng : mapParameters.center.lng - (window.innerWidth * 0.00000015)}}\n          options={{\n            styles: mapStyle,\n            minZoom: 11,\n            maxZoom: 20,\n            disableDefaultUI: true,\n          }}\n          onLoad={(map) => {\n            handleMapOnLoad(map);\n          }}\n          onZoomChanged={changeGridSize}\n        >\n          {renderCluster}\n          {userLocation !== null && (\n            <Marker key=\"userLocation\" position={userLocation} zIndex={100} />\n          )}\n          {isInfoWindowShow() && (\n            <InfoWindow\n              position={{\n                lat: mapParameters.selectMarker.coordinate.lat,\n                lng: mapParameters.selectMarker.coordinate.lng,\n              }}\n              options={{\n                pixelOffset: new window.google.maps.Size(0, -45),\n              }}\n              onCloseClick={handleInfoWindowOnCloseClick}\n            >\n              <CardMini value={mapParameters.selectMarker} />\n            </InfoWindow>\n          )}\n          {mapParameters.polygon && (\n            <Polygon path={mapParameters.polygon} options={polygonOptions} />\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nconst mapStyle = [\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.natural\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#f0f0f0\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      // {\n      //     \"color\": \"#88cece\"\n      // }\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n      {\n        color: \"#ec7868\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#3da7a7\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#cccccc\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#f9f9f9\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 700,\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#83cfe2\",\n      },\n    ],\n  },\n];\n\nconst polygonOptions = {\n  fillColor: \"#FF7777\",\n  fillOpacity: 0.1,\n  strokeColor: \"#FF7777\",\n  strokeOpacity: 1,\n  strokeWeight: 1,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  geodesic: false,\n  zIndex: 0,\n};\n\nconst clustersOptions = {\n  styles: [\n    {\n      textSize: 14,\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m1.png\",\n    },\n    {\n      textSize: 14,\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m2.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m3.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m4.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m5.png\",\n    },\n  ],\n};\n\nexport default Map;\n","import {useState} from 'react';\n\nconst Card = (props)=>{\n    let data = props.value;\n\n    const [showLess, setShowLess] = useState(true);\n    const {setMapParameters} = props;\n    const handleClick = ()=>{\n        setShowLess(!showLess);\n    }\n\n    const handleLocationData = ()=>{\n        let randomNum = Math.random() / 1000000;\n        setMapParameters({\n            center: {lat:data.coordinate.lat + randomNum, lng:data.coordinate.lng + randomNum},\n            polygon: data.coordinate.polygon,\n            zoom: 20 + randomNum,\n            selectMarker: data,\n            closeInfoWindow: false\n        });\n    }\n\n    if(data === 'loading'){\n        return(\n            <div className='card loading'>\n                <div>Loading...</div>\n            </div>);\n    }\n\n    return(\n        <div className='card'>\n            <div className='card-meta'>\n                <div className='card-meta-title'>\n                    <div className='highlighter bgColor_mintGreen-light' style={{width:data.pipeType.length+'em'}}></div>\n                    <div className={`state unselectable ${data.workingState === '是' ? 'working' : 'notWorking'}`}>{data.workingState === '是' ? '施工中' : '未施工'}</div>\n                    <div className='pipeType' style={{position:'relative'}}>\n                        {data.pipeType}\n                    </div>\n                </div>\n                <div className='card-meta-basicInfo'>\n                    <div className='date'>\n                        <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span><i className=\"fas fa-caret-right fa-lg\"></i><span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\n                    </div>\n                    <div className='info'>\n                        <div className='item'>案件類別</div>\n                        <div>{data.constructionType}</div>\n                    </div>\n                    <div className='info'>\n                        <div className='item'>地點</div>\n                        <div>{data.distriction + data.address}</div>\n                    </div>\n                </div>\n                <div className='buttons'>\n                    {(data.coordinate.lat !== 0 && data.coordinate.lat !== 0) &&\n                    <div title='顯示位置' className='buttons-locate' onClick={()=>{handleLocationData()}}>\n                        <i className=\"fas fa-map-marker-alt\"/>\n                    </div>}\n                    <div title='更多資訊' className={showLess ? 'buttons-moreInfo' : 'buttons-moreInfoClicked'} onClick={()=>{handleClick()}}>\n                        <i className={`fas ${showLess ? 'fa-angle-double-down' : 'fa-angle-double-up'}`}/>\n                    </div>\n                </div>\n            </div>\n            <div className={`${showLess && 'noneDisplay'} horiLine`}/>\n            <div className={`${showLess && 'noneDisplay'} card-body`}>\n                <div className='card-body-detailInfo'>\n                    <div className='oneRow'>\n                        <div className='item'>工程名稱</div>\n                        <div className='constructTitle'>{data.title}</div>\n                    </div>\n                    <div>\n                        <div className='item'>申請書編號</div>\n                        <div>{data.applicationNumber}</div>\n                    </div>\n                    <div>\n                        <div className='item'>許可證編號</div>\n                        <div>{data.licenseNumber}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>申請單位</div>\n                        <div>{data.applicant}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>廠商</div>\n                        <div>{data.contractor.name}</div>\n                        <div className='phone'>{data.contractor.phone}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>負責人</div>\n                        <div>{data.personInCharge.name}</div>\n                        <div className='phone'>{data.personInCharge.phone}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","const CloseButton = (props)=>{\n\n    let {handleCloseClick, handleMakerMessageClick} = props;\n\n    const handleClick = ()=>{\n        if(handleCloseClick !== undefined){\n            handleCloseClick();\n        }\n        else if(handleMakerMessageClick !== undefined){\n            handleMakerMessageClick();\n        }\n    }\n\n    return(\n        <div className='closeButtonContainer'>\n            <div className='closeButton' onClick={handleClick}>\n                <i className=\"fas fa-times fa-lg\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default CloseButton;","const Pagination = (props)=>{\n    //必須變數from Card list，依賴Card list\n    //不能用[]\n    const {margin ,pageBtns, pageIndex, isMobile} = props;\n    //PageButtons有自己的handleClick，變數名稱有衝突\n    //另外用一個變數儲存從CardList傳來的handleClick，而不解構賦值\n    const handleBtnClick = props.handlePaginationClick;\n    let returnElement = null;\n    let minPageIndex = 0, maxPageIndex = pageBtns.length - 1;\n\n    const focusPage = (i)=>{\n        if( i === pageIndex ) return 'currentPage';\n    }\n\n    if(pageBtns.length === 1) return null;\n    if(isMobile){\n        let pageBtnsArr = Array.from({length:pageBtns.length}, (_,index)=>index);\n        let selectValue = null;\n        returnElement=\n        <div className='pagination unselectable'>\n            <div className=' pageArrow' key={`prePage`}\n                onClick={()=>{\n                    selectValue = pageIndex-1;\n                    handleBtnClick(selectValue);\n                    if(selectValue > minPageIndex) document.getElementById('pageSelect').value = selectValue;\n                }}\n            >\n                <i className=\"fas fa-chevron-left\"/>\n            </div>\n            <div className='pageElement'>\n                <i className=\"selectArrow fas fa-chevron-down fa-lg\"/>\n                <span>{pageIndex+1}</span>\n                <select id='pageSelect'\n                        value={pageIndex}\n                        onChange={(e)=>handleBtnClick(Number(e.target.value))}\n                >\n                    {\n                        pageBtnsArr.map((i)=>(\n                            <option value={i}\n                                    key={'pageSelect_'+(i+1)}>\n                                {i+1}\n                            </option>\n                        ))\n                    }\n                </select>\n            </div>\n            <div className=' pageArrow' key={`nextPage`}\n                onClick={()=>{\n                    selectValue = pageIndex+1;\n                    handleBtnClick(selectValue);\n                    if(selectValue < maxPageIndex) document.getElementById('pageSelect').value = selectValue;}}\n                >\n                <i className=\"fas fa-chevron-right\"/>\n            </div>\n        </div>;\n    }else{    \n        if(pageBtns.length > 7){\n            if(pageIndex - minPageIndex > 3 && maxPageIndex - pageIndex > 3){\n                let pages = Array.from({length:3},(_,index)=>index+pageIndex-1);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    <div key={'page-'+minPageIndex+1}\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\n                        {minPageIndex+1}\n                    </div>\n                    <div className='pageElement dot'/>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement dot'/>\n                    <div key={'page-'+maxPageIndex+1}\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\n                        {maxPageIndex+1}\n                    </div>\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }else if(pageIndex - minPageIndex <= 3){\n                let pages = Array.from({length:5},(_,index)=>index);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        style={pageIndex===minPageIndex ? {visibility: 'hidden'} : {}}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page-'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement dot'/>\n                    <div key={'page-'+maxPageIndex+1}\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\n                        {maxPageIndex+1}\n                    </div>\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }else if(maxPageIndex - pageIndex <= 3){\n                let pages = Array.from({length:5},(_,index)=>index+maxPageIndex-4);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    <div key={'page-'+minPageIndex+1}\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\n                        {minPageIndex+1}\n                    </div>\n                    <div className='pageElement dot'/>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page-'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        style={pageIndex===maxPageIndex ? {visibility: 'hidden'} : {}}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }\n        }else{\n            returnElement = \n            <div className={`pagination unselectable ${margin}`}>\n                {\n                    pageBtns.map((i)=>(\n                        <div key={'page-'+(i+1)}\n                            onClick={()=>{handleBtnClick(i)}}\n                            className={`pageElement pageBtn ${focusPage(i)}`}>\n                            {i+1}\n                        </div>\n                    ))\n                }\n            </div>\n        }\n    }\n    return(returnElement);\n}\n\nexport default Pagination;","import { useCallback, useEffect, useState } from \"react\";\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport zh_TW from 'date-fns/locale/zh-TW';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Selectors = (props)=>{\n\n    const [dateRange, setDateRange] = useState([null, null]);\n    const [startDate, endDate] = dateRange;\n    const [dateOnPicker,setDateOnPicker] = useState('');\n    const [selectValue,setSelectValue] = useState({dist:null,workingState:null});\n    const {options, condition, mapParameters, setCondition, setPageIndex, setMapParameters}= props;\n\n    const INITAIL = useCallback(()=>{\n        let node = document.getElementById('districtionSelect');\n        setCSSChosenValue(node);\n        setCSSChosenValue(node.previousElementSibling, node.value);\n        registerLocale('zh-TW',zh_TW);\n    },[]);\n\n    useEffect(()=>{\n        INITAIL();\n        setSelectValue({dist:getSelectValue('districtionSelect'), workingState:getSelectValue('workingStateSelect')});\n    },[INITAIL]);\n\n    const setCSSChosenValue = (element, value=element.value)=>{\n        element.dataset.chosen = value;\n    }\n\n    const addZero2String = (time)=>{\n        let _time = typeof time === \"number\" ? time.toString() : time;\n        if(_time.length === 1) _time = '0'+_time;\n        return _time;\n    }\n\n    const clearMapInfo = ()=>{\n        setMapParameters({\n            center: {lat : 24.1512535, lng : 120.6617366},\n            polygon: null,\n            zoom: 12 + (Math.random() / 10000), //cluster的顯示問題\n            selectMarker: mapParameters.selectMarker,\n            closeInfoWindow: true\n        });\n    }\n\n    const getSelectValue = (id)=>{\n        let element = document.getElementById(id);\n        let value = null;\n\n        if(element === null) value = '載入中';\n        else{\n            value =  element.value;\n            if(id === 'workingStateSelect'){\n                switch(value){\n                    case '0' : \n                        value = '全案件';\n                        break;\n                    case '是' :\n                        value = '施工中';\n                        break;\n                    case '否' :\n                        value = '未施工';\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if(id === 'districtionSelect' && value === '0'){\n                value = '全地區';\n            }\n        }\n        \n        return value;\n    }\n\n    const convertWorkingState = (value)=>{\n        let state = null;\n        switch(value){\n            case 0 : \n                state = '全案件';\n                break;\n            case '是' :\n                state = '施工中';\n                break;\n            case '否' :\n                state = '未施工';\n                break;\n            default:\n                break;\n        }\n        return state;\n    }\n\n    const handleWorkingState = (e)=>{\n        let dist = condition.distriction;\n        let workingState = Number(e.target.value) === 0 ? 0 : e.target.value;\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\n        let _dateOnPicker = dateOnPicker;\n        let stack = condition.stack;\n        setCSSChosenValue(e.target);\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\n        setSelectValue((prevState)=>({\n            ...prevState,\n            workingState: convertWorkingState(workingState)\n        }));\n\n        if(stack.indexOf('workingState') === -1) stack.push('workingState');\n        else if(workingState === 0){\n            stack = stack.filter((e)=>e!=='workingState');\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('workingState',[workingState, dist, startDate, endDate, _dateOnPicker]);\n        }\n\n        clearMapInfo();\n        setPageIndex(0);\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        else setDateOnPicker('');\n        setCondition({workingState: workingState,\n                      distriction:dist,\n                      date:{\n                        start: startDate === null ? null : {...startDate},\n                        end: endDate === null ? null : {...endDate}\n                      },\n                      stack:stack});\n    }\n    \n    const handleDistChange = (e)=>{\n        let dist = Number(e.target.value) === 0 ? 0 : e.target.value;\n        let workingState = condition.workingState;\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\n        let _dateOnPicker = dateOnPicker;\n        let stack = condition.stack;\n        setCSSChosenValue(e.target);\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\n        setSelectValue((prevState)=>({\n            ...prevState,\n            dist: dist === 0 ? '全地區' : dist\n        }));\n\n        if(stack.indexOf('distriction') === -1) stack.push('distriction');\n        else if(dist === 0){\n            stack = stack.filter((e)=>e!=='distriction');\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('distriction',[workingState, dist, startDate, endDate, _dateOnPicker]);\n        }\n\n        clearMapInfo();\n        setPageIndex(0);\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        else setDateOnPicker('');\n        setCondition({workingState: workingState,\n                      distriction:dist,\n                      date:{\n                          start: startDate === null ? null : {...startDate},\n                          end: endDate === null ? null : {...endDate}\n                      },\n                      stack:stack});\n    }\n\n    const handleDateChange = (update)=>{\n        setDateRange(update);\n        //如果結束日期尚未選擇，只更新date range。\n        if(update[0] !== null && update[1] === null){\n            setDateOnPicker(`${update[0].getFullYear()}/${addZero2String(update[0].getMonth() + 1)}/${addZero2String(update[0].getDate())} -`);\n            return;\n        }\n        //datepicker按清空時執行，日期沒選完不會到這邊。\n        if(update[0] === null && update[1] === null){\n            let stack = condition.stack;\n            let _dist = condition.distriction;\n            let _workingState = condition.workingState;\n            stack = stack.filter((e)=>e!=='date');\n            // [stack, [_workingState, _dist, , , ,]] = popStack('date',[_workingState, _dist, null, null, null])\n\n            clearMapInfo();\n            setDateOnPicker('');\n            setCondition({workingState:_workingState, distriction:_dist, date:{start: null, end: null}, stack:stack});\n            return;\n        }\n\n        let dist = condition.distriction;\n        let workingState = condition.workingState;\n        let startDate = {year: update[0].getFullYear(), month: update[0].getMonth() + 1, day: update[0].getDate()}\n        let endDate = {year: update[1].getFullYear(), month: update[1].getMonth() + 1, day: update[1].getDate()}\n        let stack = condition.stack;\n        if(stack.indexOf('date') === -1) stack.push('date');\n        clearMapInfo();\n        setPageIndex(0);\n        setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        setCondition({workingState:workingState, distriction:dist, date:{start: {...startDate}, end: {...endDate}}, stack:stack});\n    }\n\n    let workingStateArr = Array.from({length: options.workingState.length},(_,index)=>index);\n    let distArr = Array.from({length: options.distriction.length},(_,index)=>index);\n\n    return(\n        <div className='selectors'>\n            <div className='selectContainer'>\n                <i className=\"selectArrow fas fa-chevron-down\"/>\n                <select name='workingState'\n                        id='workingStateSelect'\n                        defaultValue='是'\n                        onChange={handleWorkingState}\n                >\n                    <option value={0}>全案件</option>\n                    {\n                        workingStateArr.map((i)=>(\n                            <option value={options.workingState[i]} key={options.workingState[i]}>\n                                {options.workingState[i]==='是' ? '施工中' : '未施工'}\n                            </option>\n                        ))\n                    }\n                </select>\n                <span>{selectValue.workingState}</span>\n            </div>\n            <div className='selectContainer'>\n                <i className=\"selectArrow fas fa-chevron-down\"/>\n                <select name='distriction'\n                        id='districtionSelect'\n                        defaultValue='0'\n                        onChange={handleDistChange}\n                >\n                    <option value={0}>全地區</option>\n                    {\n                        distArr.map((i)=>(\n                            <option value={options.distriction[i]} key={options.distriction[i]}>{options.distriction[i]}</option>\n                        ))\n                    }\n                </select>   \n                <span>{selectValue.dist}</span>\n            </div>\n            <DatePicker\n                value={dateOnPicker}\n                locale='zh-TW'\n                wrapperClassName='dateSelectContainer'\n                className='dateSelect'\n                placeholderText='日期範圍'\n                dateFormat='yyyy/MM/dd'\n                selectsRange={true}\n                startDate={startDate}\n                endDate={endDate}\n                minDate={new Date(Object.values(options.date.start))}\n                maxDate={new Date(Object.values(options.date.end))}\n                isClearable\n                shouldCloseOnSelect={false}\n                onChange={handleDateChange}\n                onFocus={e => e.target.blur()}\n            />\n        </div>\n    );\n}\n\nexport default Selectors;","import { useMemo, useState } from 'react';\nimport Card from './Card';\nimport CloseButton from './CloseButton';\nimport Pagination from './Pagination';\nimport Selectors from './Selectors';\n\nconst InfoBlock = (props)=>{\n\n    const {closeInfoBlock, handleCloseClick, isMobile} = props;\n    const [pageIndex, setPageIndex] = useState(0);\n\n    let cardsNum = useMemo(()=>{\n            let arr = [];\n            let length = 0;\n\n            if(props.value === null) return;\n            else if(props.value.length > 1) length =  props.value[pageIndex].length;\n            else if(props.value.length === 1) length =  props.value[0].length;\n            else length = 0;\n\n            arr = Array.from({length: length},(_,index) => index);\n            return(arr);\n    },[props.value, pageIndex]);\n\n    const handlePaginationClick = (x)=>{\n        if(x > (props.value.length - 1) || x < 0) return;\n        document.getElementById('topAnchor').scrollIntoView(false);\n        setPageIndex(x);\n    }\n    \n    const getCSSState = (condition)=>{\n        let state = '';\n        if(condition === null) state = 'hide';\n        else if(condition === true) state = 'close';\n        else if(condition === false) state = 'open';\n        return state;\n    }\n\n    if(props.value === 'loading'){\n        return(\n            <div className={`infoBlockContainer`}>\n            <div className='infoBlock' style={{paddingTop:'0', backgroundColor:'#ececec'}}>\n                <div className='loading'>\n                    <i className=\"fas fa-circle-notch fa-lg\"/>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else if(props.value === null){\n        return(\n            <div className='infoBlockContainer'>\n            <div className='infoBlock'>\n                <div className='noContent'>\n                    <div className='exclamationMark'><i className=\"fas fa-exclamation-triangle fa-lg\"/></div>\n                    <div>發生錯誤，請稍後在試</div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else if(props.length === 0){\n        return(\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\n            <div className='infoBlock'>\n                <CloseButton handleCloseClick={handleCloseClick}/>\n                <div className='toolbarContainer'>\n                    <Selectors\n                        options={props.option}\n                        condition={props.condition}\n                        mapParameters={props.mapParameters}\n                        setCondition={props.setCondition}\n                        setMapParameters={props.setMapParameters}\n                        setPageIndex={setPageIndex}\n                    />\n                </div>\n                <div className='cardsListContainer'>\n                <div className='cardsList'>\n                    <div className='noContent'>\n                        沒有符合條件的資料\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else{\n        let pageBtns = Array.from({length: props.value.length},(_,index)=>index);\n        return(\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\n            {/* <div className={`infoBlockContainer ${closeInfoBlock ? 'close':'open'}`}> */}\n            <div className='infoBlock'>\n                <CloseButton handleCloseClick={handleCloseClick}\n                />\n                <div className='toolbarContainer'>\n                    <Selectors\n                        options={props.option}\n                        condition={props.condition}\n                        setCondition={props.setCondition}\n                        setPageIndex={setPageIndex}\n                        mapParameters={props.mapParameters}\n                        setMapParameters={props.setMapParameters}\n                    />\n                </div>\n                <div className='cardsListContainer'>\n                <div className='cardsList'>\n                    <Pagination\n                        pageBtns={pageBtns}\n                        pageIndex={pageIndex}\n                        handlePaginationClick={handlePaginationClick}\n                        isMobile={isMobile}\n                    />\n                    <div id='topAnchor' style={{marginBottom:'2em'}}/>\n                    {\n                        cardsNum.map((i)=>(\n                            <Card key={'card'+(pageIndex*10+i+1)}\n                                value={props.value[pageIndex][i]}\n                                setMapParameters={props.setMapParameters}\n                            />\n                        ))\n                    }\n                    <Pagination\n                        pageBtns={pageBtns}\n                        pageIndex={pageIndex}\n                        handlePaginationClick={handlePaginationClick}\n                        isMobile={isMobile}\n                    />\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default InfoBlock;","const InfoButton = (props)=>{\n\n    let {closeInfoBlock, makerMessage, handleCloseClick, handleMakerMessageClick, userLocation, mapParameters, setMapParameters} = props;\n\n    const handleLocationClick = ()=>{\n        let randomNum = Math.random() / 1000000;\n        setMapParameters({\n            center: {lat:userLocation.lat + randomNum, lng:userLocation.lng + randomNum},\n            polygon: mapParameters.polygon,\n            zoom: mapParameters.zoom,\n            selectMarker: mapParameters.selectMarker,\n            closeInfoWindow: false\n        });\n    }\n\n    return(\n        <div className={`infoButtonContainer ${(closeInfoBlock !== false && makerMessage !== true) ? 'open':'close'}`}>\n            <div className='button' onClick={handleCloseClick}>\n                <i className=\"fas fa-search fa-lg\"/>\n            </div>\n            <div className='button' onClick={handleLocationClick} style={{display:userLocation===null ? 'none' : ''}}>\n                <i className=\"fas fa-map-marker-alt fa-lg\"/>\n            </div>\n            <div className='button' onClick={()=>{\n                handleMakerMessageClick();\n            }}>\n                <i className=\"fas fa-info fa-lg\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default InfoButton;","import CloseButton from \"./CloseButton\";\nconst MakerMessage = (props)=>{\n\n    let {makerMessage, handleMakerMessageClick} = props;\n\n    const getCSSState = (condition)=>{\n        let state = '';\n        if(condition === null) state = 'hide';\n        else if(condition === true) state = 'open';\n        else if(condition === false) state = 'close';\n        return state;\n    }\n\n    return(\n        <div className={`infoBlockContainer ${getCSSState(makerMessage)}`}>\n        <div className='infoBlock maker'>\n            <CloseButton handleMakerMessageClick={handleMakerMessageClick}/>\n            <div className='makerMessage flex'>\n                <img src={process.env.PUBLIC_URL+'/img/logo.png'} alt={'Kai\\'s logo'}/>\n                <article>\n                    <p>嗨，我是Kai。</p>\n                    <p>台中道路施工地圖是為了練習API串接所做的side project。</p>\n                    <p>還有很多細節需要改進，還有太多太多的知識要學習。學海無涯，只能繼續精進。</p>\n                </article>\n                <div/>\n                <div className='socialMedia'>\n                    <a href='https://github.com/TKaiC666' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-github fa-lg\"/>\n                    </a>\n                    <a href='https://www.facebook.com/profile.php?id=100002803117493' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-facebook fa-lg\"/>\n                    </a>\n                    <a href='https://www.instagram.com/attifmai/' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-instagram fa-lg\"/>\n                    </a>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default MakerMessage;","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Map from \"./Map\";\nimport InfoBlock from \"./InfoBlock\";\nimport InfoButton from \"./InfoButton\";\nimport MakerMessage from \"./MakerMessage\";\n\nconst TaichungRCIApp = () => {\n  const [isMobile, setIsMobile] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [closeInfoBlock, setCloseInfoBlock] = useState(null);\n  const [makerMessage, setMakerMessage] = useState(null);\n  const [constructionsData, setConstructionsData] = useState(\"loading\");\n  const [condition, setCondition] = useState({\n    workingState: \"是\",\n    distriction: 0,\n    date: { start: null, end: null },\n    stack: [\"workingState\"],\n  });\n  const [mapParameters, setMapParameters] = useState({\n    center: { lat: 24.1512535, lng: 120.6617366 },\n    polygon: null,\n    zoom: 12,\n    selectMarker: null,\n    closeInfoWindow: null,\n  });\n\n  const INITAIL = useCallback(() => {\n    let bool = null;\n    changeInfoWindowHeight();\n    bool = isWidthUnder(428);\n    window.addEventListener(\"resize\", changeInfoWindowHeight);\n    window.addEventListener(\"resize\", () => isWidthUnder(428));\n    findUserLocation();\n    initialInfoBlockDisplay(bool);\n  }, []);\n\n  const findUserLocation = () => {\n    const handleUserLocation = (position) => {\n      let _mapParameters = {\n        center: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        },\n        polygon: null,\n        zoom: 12,\n        selectMarker: null,\n        closeInfoWindow: null,\n      };\n      setMapParameters(_mapParameters);\n      setUserLocation(_mapParameters.center);\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        handleUserLocation(position);\n      });\n    } else {\n      console.log(\"geolocation is not available\");\n    }\n  };\n\n  const initialInfoBlockDisplay = (bool) => {\n    if (bool === false) {\n      setCloseInfoBlock(false);\n    }\n  };\n\n  const changeInfoWindowHeight = () => {\n    document.documentElement.style.setProperty(\n      \"--vh\",\n      `${window.innerHeight / 100}px`\n    );\n  };\n\n  const isWidthUnder = (width) => {\n    let bool = null;\n    if (window.innerWidth <= width) bool = true;\n    else bool = false;\n    setIsMobile(bool);\n    return bool;\n  };\n\n  const convertDate2Num = (date) => {\n    let [year, month, day] = Object.values(date);\n    year = year.toString();\n    month = month.toString();\n    day = day.toString();\n\n    if (month.length === 1) month = \"0\" + month;\n    if (day.length === 1) day = \"0\" + day;\n\n    return parseInt(year + month + day, 10);\n  };\n\n  const sliceData = (data) => {\n    let _data = data;\n    let newData = [];\n    for (let i = 0; i < _data.length; i += 10) {\n      newData.push(_data.slice(i, i + 10));\n    }\n    return newData;\n  };\n\n  const fetchData = useCallback(() => {\n    const reconstructData = (data) => {\n      function convertData(data) {\n        const convertStringCoor2Num = (lat, lng) => {\n          let locationObject = { lat: 0, lng: 0 };\n          locationObject.lat = Number(lat);\n          locationObject.lng = Number(lng);\n\n          return locationObject;\n        };\n\n        const splitPolygonData = (polygon) => {\n          let coordArray = polygon.slice(12, polygon.length - 2);\n          if (polygon === \"\") {\n            return null;\n          }\n\n          coordArray = coordArray.split(\", \");\n          coordArray = coordArray.map((i) => i.split(\" \"));\n          coordArray = coordArray.map((i) => convertStringCoor2Num(i[1], i[0]));\n\n          return coordArray;\n        };\n\n        let convertPart = {\n          date: {\n            start: {\n              year: Number(data[\"核准起日\"].substring(0, 3)) + 1911,\n              month: Number(data[\"核准起日\"].substring(3, 5)),\n              day: Number(data[\"核准起日\"].substring(5)),\n            },\n            end: {\n              year: Number(data[\"核准迄日\"].substring(0, 3)) + 1911,\n              month: Number(data[\"核准迄日\"].substring(3, 5)),\n              day: Number(data[\"核准迄日\"].substring(5)),\n            },\n          },\n          personInCharge: {\n            name: data[\"承辦人\"].substring(0, 1) + \"◯◯\",\n          },\n          coordinate: {\n            lat: convertStringCoor2Num(data[\"中心點Y坐標\"], data[\"中心點X坐標\"])\n              .lat,\n            lng: convertStringCoor2Num(data[\"中心點Y坐標\"], data[\"中心點X坐標\"])\n              .lng,\n            polygon: splitPolygonData(data[\"施工範圍坐標\"]),\n          },\n        };\n\n        return convertPart;\n      }\n\n      let convertedPart = convertData(data);\n\n      let newData = {\n        title: data[\"工程名稱\"],\n        distriction: data[\"區域名稱\"],\n        address: data[\"地點\"],\n        pipeType: data[\"管線工程類別\"],\n        constructionType: data[\"案件類別\"],\n        workingState: data[\"是否開工\"],\n        date: {\n          start: {\n            year: convertedPart.date.start.year,\n            month: convertedPart.date.start.month,\n            day: convertedPart.date.start.day,\n          },\n          end: {\n            year: convertedPart.date.end.year,\n            month: convertedPart.date.end.month,\n            day: convertedPart.date.end.day,\n          },\n        },\n        applicationNumber: data[\"申請書編號\"],\n        licenseNumber: data[\"許可證編號\"],\n        applicant: data[\"申請單位\"],\n        contractor: {\n          name: data[\"廠商名稱\"],\n          phone: data[\"廠商電話\"],\n        },\n        personInCharge: {\n          name: convertedPart.personInCharge.name,\n          phone: data[\"承辦人電話\"],\n        },\n        coordinate: {\n          lat: convertedPart.coordinate.lat,\n          lng: convertedPart.coordinate.lng,\n          polygon: convertedPart.coordinate.polygon,\n        },\n      };\n\n      return newData;\n    };\n\n    const handleData = (data) => {\n      let _data = data;\n      let newData = [];\n      for (let i = 0; i < _data.length; i++) {\n        newData.push(reconstructData(_data[i]));\n      }\n      return newData;\n    };\n\n    const fetchingData = () => {\n      console.time(\"fetch花費時間\");\n      fetch(process.env.REACT_APP_API_URL)\n        .then((response) => {\n          console.timeEnd(\"fetch花費時間\");\n          if (response.status === 200) {\n            return response.text();\n          }\n          throw new Error(\"response was not ok.\");\n        })\n        .then((data) => {\n          if (data[0] !== \"[\") {\n            console.error(\"fetch error : \\n\", data);\n            setConstructionsData(null);\n          } else {\n            let newData = handleData(JSON.parse(data));\n            setConstructionsData(newData);\n          }\n        })\n        .catch((error) => {\n          console.error(\"fetch error : \", error.message);\n          setConstructionsData(null);\n        });\n    };\n\n    fetchingData();\n  }, []);\n\n  useEffect(() => {\n    INITAIL();\n    fetchData();\n  }, [INITAIL, fetchData]);\n\n  const filteredData = useMemo(() => {\n    const filteringData = (condition) => {\n      let data = constructionsData;\n      let newData = [];\n      if (data === null || data === \"loading\") {\n        newData = data;\n      } else if (condition.stack.length === 3) {\n        newData = data.filter(\n          (object) =>\n            ((convertDate2Num(condition.date.start) >=\n              convertDate2Num(object.date.start) &&\n              convertDate2Num(condition.date.start) <=\n                convertDate2Num(object.date.end)) ||\n              (convertDate2Num(condition.date.end) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.end) <=\n                  convertDate2Num(object.date.end))) &&\n            object.workingState === condition.workingState &&\n            object.distriction === condition.distriction\n        );\n      } else if (condition.stack.length === 2) {\n        if (condition.stack.indexOf(\"date\") !== -1) {\n          let anotherCondition =\n            condition.stack[1 - condition.stack.indexOf(\"date\")];\n          newData = data.filter(\n            (object) =>\n              ((convertDate2Num(condition.date.start) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.start) <=\n                  convertDate2Num(object.date.end)) ||\n                (convertDate2Num(condition.date.end) >=\n                  convertDate2Num(object.date.start) &&\n                  convertDate2Num(condition.date.end) <=\n                    convertDate2Num(object.date.end))) &&\n              object[anotherCondition] === condition[anotherCondition]\n          );\n        } else {\n          newData = data.filter(\n            (object) =>\n              object.workingState === condition.workingState &&\n              object.distriction === condition.distriction\n          );\n        }\n      } else if (condition.stack.length === 1) {\n        if (condition.distriction !== 0) {\n          newData = data.filter(\n            (object) => object.distriction === condition.distriction\n          );\n        } else if (\n          condition.date.start !== null &&\n          condition.date.end !== null\n        ) {\n          newData = data.filter(\n            (object) =>\n              (convertDate2Num(condition.date.start) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.start) <=\n                  convertDate2Num(object.date.end)) ||\n              (convertDate2Num(condition.date.end) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.end) <=\n                  convertDate2Num(object.date.end))\n          );\n        } else if (condition.workingState !== 0) {\n          newData = data.filter(\n            (object) => object.workingState === condition.workingState\n          );\n        }\n      }\n\n      return newData;\n    };\n\n    let newData = filteringData(condition);\n    return newData;\n  }, [condition, constructionsData]);\n\n  const selectorsOptions = useMemo(() => {\n    let _stack = condition.stack;\n    let _options = {\n      workingState: [],\n      distriction: [],\n      date: { start: {}, end: {} },\n    };\n    if (\n      _stack.length >= 0 &&\n      constructionsData !== \"loading\" &&\n      constructionsData !== null\n    ) {\n      _options.date.start = { ...constructionsData[0].date.start };\n      _options.date.end = { ...constructionsData[0].date.end };\n      for (let object of constructionsData) {\n        if (_options.workingState.indexOf(object.workingState) === -1)\n          _options.workingState.push(object.workingState);\n        if (_options.distriction.indexOf(object.distriction) === -1)\n          _options.distriction.push(object.distriction);\n        if (\n          convertDate2Num(object.date.start) <=\n          convertDate2Num(_options.date.start)\n        )\n          _options.date.start = { ...object.date.start };\n        if (\n          convertDate2Num(object.date.end) >= convertDate2Num(_options.date.end)\n        )\n          _options.date.end = { ...object.date.end };\n      }\n    }\n    return _options;\n  }, [condition.stack, constructionsData]);\n\n  const handleCloseClick = () => {\n    let _closeInfoBlock = closeInfoBlock;\n    if (_closeInfoBlock !== null) {\n      _closeInfoBlock = !_closeInfoBlock;\n    } else _closeInfoBlock = false;\n    setCloseInfoBlock(_closeInfoBlock);\n  };\n\n  const handleMakerMessageClick = () => {\n    let _makerMessage = makerMessage;\n    if (makerMessage !== null) {\n      _makerMessage = !_makerMessage;\n    } else _makerMessage = true;\n    setMakerMessage(_makerMessage);\n  };\n\n  if (constructionsData === \"loading\" || constructionsData === null) {\n    return (\n      <div>\n        <Map\n          constructionsData={null}\n          mapParameters={mapParameters}\n          setMapParameters={setMapParameters}\n        />\n        <InfoBlock value={constructionsData} />\n      </div>\n    );\n  } else {\n    let data = null;\n    if (\n      condition.distriction === 0 &&\n      condition.date.start === null &&\n      condition.date.end === null &&\n      condition.workingState === 0\n    ) {\n      data = constructionsData;\n    } else {\n      data = filteredData;\n    }\n    return (\n      <div className=\"container\">\n        <Map\n          constructionsData={sliceData(data)}\n          mapParameters={mapParameters}\n          closeInfoBlock={closeInfoBlock}\n          setMapParameters={setMapParameters}\n          makerMessage={makerMessage}\n          isMobile={isMobile}\n          userLocation={userLocation}\n        />\n        <InfoButton\n          closeInfoBlock={closeInfoBlock}\n          makerMessage={makerMessage}\n          handleCloseClick={handleCloseClick}\n          handleMakerMessageClick={handleMakerMessageClick}\n          userLocation={userLocation}\n          mapParameters={mapParameters}\n          setMapParameters={setMapParameters}\n        />\n        <InfoBlock\n          value={sliceData(data)}\n          length={data.length}\n          option={selectorsOptions}\n          condition={condition}\n          mapParameters={mapParameters}\n          closeInfoBlock={closeInfoBlock}\n          isMobile={isMobile}\n          handleCloseClick={handleCloseClick}\n          setCondition={setCondition}\n          setMapParameters={setMapParameters}\n        />\n        <MakerMessage\n          makerMessage={makerMessage}\n          handleMakerMessageClick={handleMakerMessageClick}\n        />\n      </div>\n    );\n  }\n};\n\nexport default TaichungRCIApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TaichungRCIApp from './component/TaichungRCIApp';\nimport './index.css';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <TaichungRCIApp/>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}