{"version":3,"sources":["component/CardMini.js","component/Map.js","component/Card.js","component/CloseButton.js","component/Pagination.js","component/Selectors.js","component/InfoBlock.js","component/InfoButton.js","component/MakerMessage.js","component/TaichungRCIApp.js","index.js"],"names":["CardMini","props","data","value","className","workingState","pipeType","date","start","year","month","day","end","constructionType","title","distriction","address","mapStyle","polygonOptions","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","clustersOptions","styles","textSize","height","width","url","process","Map","useState","gridSize","setGridSize","constructionsData","mapParameters","closeInfoBlock","setMapParameters","isMobile","makerMessage","userLocation","mapRef","useRef","isClusterWork","length","renderCluster","useMemo","renderMarker","cluster","markersNum","Array","from","_","index","map","i","Math","floor","coordinate","lat","lng","position","Number","onClick","newCenter","current","getCenter","toJSON","center","polygon","zoom","selectMarker","closeInfoWindow","handleMarkerClick","clusterer","noClustererRedraw","icon","scaledSize","averageCenter","options","id","googleMapsApiKey","mapContainerStyle","minZoom","maxZoom","disableDefaultUI","onLoad","handleMapOnLoad","onZoomChanged","size","bool","isInfoWindowShow","pixelOffset","window","google","maps","Size","onCloseClick","path","Card","showLess","setShowLess","style","randomNum","random","handleLocationData","applicationNumber","licenseNumber","applicant","contractor","name","phone","personInCharge","CloseButton","handleCloseClick","handleMakerMessageClick","undefined","Pagination","margin","pageBtns","pageIndex","handleBtnClick","handlePaginationClick","returnElement","maxPageIndex","focusPage","pageBtnsArr","selectValue","document","getElementById","onChange","e","target","pages","minPageIndex","visibility","Selectors","dateRange","setDateRange","startDate","endDate","dateOnPicker","setDateOnPicker","dist","setSelectValue","condition","setCondition","setPageIndex","INITAIL","useCallback","node","setCSSChosenValue","previousElementSibling","registerLocale","zh_TW","useEffect","getSelectValue","element","dataset","chosen","addZero2String","time","_time","toString","clearMapInfo","console","log","convertWorkingState","state","workingStateArr","distArr","defaultValue","_dateOnPicker","stack","prevState","indexOf","push","filter","locale","wrapperClassName","placeholderText","dateFormat","selectsRange","minDate","Date","Object","values","maxDate","isClearable","shouldCloseOnSelect","update","_dist","_workingState","getFullYear","getMonth","getDate","onFocus","blur","InfoBlock","cardsNum","x","scrollIntoView","getCSSState","paddingTop","backgroundColor","option","marginBottom","InfoButton","display","MakerMessage","src","alt","href","rel","TaichungRCIApp","setIsMobile","setUserLocation","setCloseInfoBlock","setMakerMessage","setConstructionsData","changeInfoWindowHeight","isWidthUnder","addEventListener","findUserLocation","initialInfoBlockDisplay","navigator","geolocation","getCurrentPosition","_mapParameters","coords","latitude","longitude","handleUserLocation","documentElement","setProperty","innerHeight","innerWidth","convertDate2Num","parseInt","sliceData","_data","newData","slice","fetchData","reconstructData","convertedPart","convertStringCoor2Num","locationObject","substring","coordArray","split","splitPolygonData","convertData","fetch","then","response","timeEnd","status","text","Error","error","handleData","JSON","parse","catch","message","filteredData","object","anotherCondition","filteringData","selectorsOptions","_options","_closeInfoBlock","_makerMessage","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cb7a9f7f.chunk.js","sourcesContent":["\r\nconst CardMini = (props)=>{\r\n    let data = props.value;\r\n    return(\r\n        <div className='cardMini'>\r\n            <div className='title'>\r\n                <div className={`state inlineBlock ${data.workingState === '是' ? 'working' : 'notWorking'}`}>\r\n                    {data.workingState === '是' ? '施工中' : '未施工'}\r\n                </div>\r\n                <div className='pipeType inlineBlock'>\r\n                    {data.pipeType}\r\n                </div>\r\n            </div>\r\n            <div className='title'>\r\n                <div className='date'>\r\n                    <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span>\r\n                    <i className=\"fas fa-caret-right fa-lg\"/>\r\n                    <span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='item'>案件類別</div>\r\n                <div className='data'>{data.constructionType}</div>\r\n            </div>\r\n            <div>\r\n                <div className='item'>工程名稱</div>\r\n                <div className='data'>{data.title}</div>\r\n            </div>\r\n            <div>\r\n                <div className='item'>地點</div>\r\n                <div className='data last'>{data.distriction + data.address}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardMini;","import React, { useMemo, useRef, useState } from 'react';\r\nimport {GoogleMap, LoadScript, InfoWindow, MarkerClusterer, Marker, Polygon} from '@react-google-maps/api';\r\nimport CardMini from './CardMini';\r\n\r\nconst Map = (props)=>{\r\n    const [gridSize, setGridSize] = useState(60);\r\n    const {constructionsData, mapParameters, closeInfoBlock, setMapParameters, isMobile, makerMessage, userLocation} = props;\r\n    const mapRef = useRef(null);\r\n    const APIKey = 'AIzaSyAD3EMZ4E3XEei4WDxlpEaUpiPeOCm5cIQ';\r\n    let isClusterWork = (constructionsData !== null) && (constructionsData.length !== 0) ? true : false;\r\n\r\n    const changeGridSize = ()=>{\r\n        let size = null;\r\n        if(!mapRef.current || mapRef.current.zoom <= 18) size = 60;\r\n        else if(mapRef.current.zoom > 18) size = 1;\r\n        setGridSize(size);\r\n    }\r\n\r\n    const handleMapOnLoad = (map)=>{\r\n        mapRef.current = map;\r\n    }\r\n\r\n    const handleInfoWindowOnCloseClick = ()=>{\r\n        setMapParameters({\r\n            center: mapParameters.center,\r\n            polygon: mapParameters.polygon,\r\n            zoom: mapParameters.zoom,\r\n            selectMarker: null,\r\n            closeInfoWindow: true\r\n        });\r\n    }\r\n\r\n    const isInfoWindowShow = ()=>{\r\n        let bool = false;\r\n        if(mapParameters.closeInfoWindow === true) bool = false;\r\n        else if(mapParameters.selectMarker !== null) bool = true;\r\n        return bool;\r\n    }\r\n\r\n    const renderCluster = useMemo(()=>{\r\n\r\n        const handleMarkerClick = (i)=>{\r\n            // center = mapRef.current.center;\r\n            let data = constructionsData[Math.floor(i/10)][i%10];\r\n            let newCenter = mapRef.current.getCenter().toJSON();\r\n            \r\n            setMapParameters({\r\n                center: newCenter,\r\n                polygon: data.coordinate.polygon,\r\n                zoom: mapParameters.zoom,\r\n                selectMarker: data,\r\n                closeInfoWindow: false\r\n            });\r\n        }\r\n\r\n        const renderMarker = (cluster)=>{\r\n            let markersNum = (constructionsData.length-1)*10 + constructionsData[(constructionsData.length-1)].length;\r\n            let markers = Array.from({length : markersNum},(_,index)=>index);\r\n            return(\r\n                markers.map((i)=>(\r\n                    (constructionsData[Math.floor(i/10)][i%10].coordinate.lat !== 0 && constructionsData[Math.floor(i/10)][i%10].coordinate.lng !== 0) &&\r\n                        <Marker key={'marker_'+i} \r\n                                position={{lat: Number(constructionsData[Math.floor(i/10)][i%10].coordinate.lat), lng: Number(constructionsData[Math.floor(i/10)][i%10].coordinate.lng)}}\r\n                                onClick={()=>handleMarkerClick(i)}\r\n                                clusterer={cluster}\r\n                                noClustererRedraw={true}\r\n                                icon={constructionsData[Math.floor(i/10)][i%10].workingState === '是' ? \r\n                                {\r\n                                    url: process.env.PUBLIC_URL+'/img/marker/cone.png',\r\n                                    scaledSize : {width:37, height:37}\r\n                                } : \r\n                                {\r\n                                    url:process.env.PUBLIC_URL+'/img/marker/cone_gray.png',\r\n                                    scaledSize : {width:37, height:37}\r\n                                }}\r\n                        />\r\n                ))\r\n            );\r\n        }\r\n\r\n        return(\r\n            isClusterWork && \r\n            <MarkerClusterer\r\n                key='markerClusterer'\r\n                averageCenter={true}\r\n                options={clustersOptions} \r\n                gridSize={gridSize}\r\n            >\r\n                { cluster => renderMarker(cluster) }\r\n            </MarkerClusterer>);\r\n    },[constructionsData, isClusterWork, gridSize, mapParameters, setMapParameters]);\r\n    \r\n    const mapCoverState = ()=>{\r\n        if(constructionsData === null) return 'open';\r\n        else if(isMobile){\r\n            if(closeInfoBlock === null && makerMessage === null) return 'close';\r\n            else if((closeInfoBlock === false) || (makerMessage === true)) return 'open';\r\n            else if((closeInfoBlock === true) || (makerMessage === false)) return 'close';\r\n        }else{\r\n            return 'close';\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='mapContainer'>\r\n        <div id='mapCover' className={`mapCover ${mapCoverState()}`}/>\r\n        <LoadScript googleMapsApiKey={APIKey}>\r\n            <GoogleMap\r\n                mapContainerStyle={{\r\n                    width: '100%',\r\n                    height: 'inherit'\r\n                }}\r\n                zoom={mapParameters.zoom}\r\n                center={mapParameters.center}\r\n                // center={{lat : mapParameters.center.lat, lng : mapParameters.center.lng - (window.innerWidth * 0.00000015)}}\r\n                options={{ \r\n                    styles : mapStyle,\r\n                    minZoom : 11,\r\n                    maxZoom : 20,\r\n                    disableDefaultUI : true,\r\n                }}\r\n                onLoad={(map)=>{handleMapOnLoad(map)}}\r\n                onZoomChanged={changeGridSize}\r\n            >\r\n                {\r\n                    renderCluster\r\n                }\r\n                {\r\n                    (userLocation !== null) &&\r\n                    <Marker key='userLocation'\r\n                            position={userLocation}\r\n                            zIndex={100}\r\n                    />\r\n                }\r\n                { isInfoWindowShow() && (\r\n                    <InfoWindow\r\n                        position={{lat: mapParameters.selectMarker.coordinate.lat, lng: mapParameters.selectMarker.coordinate.lng}}\r\n                        options={{\r\n                            pixelOffset : new window.google.maps.Size(0,-45),\r\n                        }}\r\n                        onCloseClick={handleInfoWindowOnCloseClick}\r\n                    >\r\n                        <CardMini value={mapParameters.selectMarker}/>\r\n                    </InfoWindow>\r\n                )}\r\n                {\r\n                    mapParameters.polygon && (\r\n                        <Polygon path={mapParameters.polygon} options={polygonOptions}/>\r\n                    )\r\n                }\r\n            </GoogleMap>\r\n        </LoadScript>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStyle = [\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.natural\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#f0f0f0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            // {\r\n            //     \"color\": \"#88cece\"\r\n            // }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"color\": \"#ec7868\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#3da7a7\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#cccccc\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f9f9f9\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit.line\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"lightness\": 700\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#83cfe2\"\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nconst polygonOptions = {\r\n    fillColor: \"#FF7777\",\r\n    fillOpacity: 0.1,\r\n    strokeColor: \"#FF7777\",\r\n    strokeOpacity: 1,\r\n    strokeWeight: 1,\r\n    clickable: false,\r\n    draggable: false,\r\n    editable: false,\r\n    geodesic: false,\r\n    zIndex: 0\r\n}\r\n\r\nconst clustersOptions = {\r\n    styles: [\r\n        {\r\n            textSize : 14,\r\n            height: 66,\r\n            width: 66,\r\n            url: process.env.PUBLIC_URL+\"/img/markerclusterer/m1.png\"\r\n        },\r\n        {\r\n            textSize : 14,\r\n            height: 66,\r\n            width: 66,\r\n            url: process.env.PUBLIC_URL+\"/img/markerclusterer/m2.png\",\r\n        },\r\n        {\r\n            height: 66,\r\n            width: 66,\r\n            url: process.env.PUBLIC_URL+\"/img/markerclusterer/m3.png\",\r\n        },\r\n        {\r\n            height: 66,\r\n            width: 66,\r\n            url: process.env.PUBLIC_URL+\"/img/markerclusterer/m4.png\",\r\n        },\r\n        {\r\n            height: 66,\r\n            width: 66,\r\n            url: process.env.PUBLIC_URL+\"/img/markerclusterer/m5.png\",\r\n        }\r\n    ]\r\n}\r\n\r\nexport default Map;","import {useState} from 'react';\r\n\r\nconst Card = (props)=>{\r\n    let data = props.value;\r\n\r\n    const [showLess, setShowLess] = useState(true);\r\n    const {setMapParameters} = props;\r\n    const handleClick = ()=>{\r\n        setShowLess(!showLess);\r\n    }\r\n\r\n    const handleLocationData = ()=>{\r\n        let randomNum = Math.random() / 1000000;\r\n        setMapParameters({\r\n            center: {lat:data.coordinate.lat + randomNum, lng:data.coordinate.lng + randomNum},\r\n            polygon: data.coordinate.polygon,\r\n            zoom: 20 + randomNum,\r\n            selectMarker: data,\r\n            closeInfoWindow: false\r\n        });\r\n    }\r\n\r\n    if(data === 'loading'){\r\n        return(\r\n            <div className='card loading'>\r\n                <div>Loading...</div>\r\n            </div>);\r\n    }\r\n\r\n    return(\r\n        <div className='card'>\r\n            <div className='card-meta'>\r\n                <div className='card-meta-title'>\r\n                    <div className='highlighter bgColor_mintGreen-light' style={{width:data.pipeType.length+'em'}}></div>\r\n                    <div className={`state unselectable ${data.workingState === '是' ? 'working' : 'notWorking'}`}>{data.workingState === '是' ? '施工中' : '未施工'}</div>\r\n                    <div className='pipeType' style={{position:'relative'}}>\r\n                        {data.pipeType}\r\n                    </div>\r\n                </div>\r\n                <div className='card-meta-basicInfo'>\r\n                    <div className='date'>\r\n                        <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span><i className=\"fas fa-caret-right fa-lg\"></i><span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\r\n                    </div>\r\n                    <div className='info'>\r\n                        <div className='item'>案件類別</div>\r\n                        <div>{data.constructionType}</div>\r\n                    </div>\r\n                    <div className='info'>\r\n                        <div className='item'>地點</div>\r\n                        <div>{data.distriction + data.address}</div>\r\n                    </div>\r\n                </div>\r\n                <div className='buttons'>\r\n                    {(data.coordinate.lat !== 0 && data.coordinate.lat !== 0) &&\r\n                    <div title='顯示位置' className='buttons-locate' onClick={()=>{handleLocationData()}}>\r\n                        <i className=\"fas fa-map-marker-alt\"/>\r\n                    </div>}\r\n                    <div title='更多資訊' className={showLess ? 'buttons-moreInfo' : 'buttons-moreInfoClicked'} onClick={()=>{handleClick()}}>\r\n                        <i className={`fas ${showLess ? 'fa-angle-double-down' : 'fa-angle-double-up'}`}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`${showLess && 'noneDisplay'} horiLine`}/>\r\n            <div className={`${showLess && 'noneDisplay'} card-body`}>\r\n                <div className='card-body-detailInfo'>\r\n                    <div className='oneRow'>\r\n                        <div className='item'>工程名稱</div>\r\n                        <div className='constructTitle'>{data.title}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='item'>申請書編號</div>\r\n                        <div>{data.applicationNumber}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='item'>許可證編號</div>\r\n                        <div>{data.licenseNumber}</div>\r\n                    </div>\r\n                    <div className='oneRow'>\r\n                        <div className='item'>申請單位</div>\r\n                        <div>{data.applicant}</div>\r\n                    </div>\r\n                    <div className='oneRow'>\r\n                        <div className='item'>廠商</div>\r\n                        <div>{data.contractor.name}</div>\r\n                        <div className='phone'>{data.contractor.phone}</div>\r\n                    </div>\r\n                    <div className='oneRow'>\r\n                        <div className='item'>負責人</div>\r\n                        <div>{data.personInCharge.name}</div>\r\n                        <div className='phone'>{data.personInCharge.phone}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","const CloseButton = (props)=>{\r\n\r\n    let {handleCloseClick, handleMakerMessageClick} = props;\r\n\r\n    const handleClick = ()=>{\r\n        if(handleCloseClick !== undefined){\r\n            handleCloseClick();\r\n        }\r\n        else if(handleMakerMessageClick !== undefined){\r\n            handleMakerMessageClick();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='closeButtonContainer'>\r\n            <div className='closeButton' onClick={handleClick}>\r\n                <i className=\"fas fa-times fa-lg\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CloseButton;","const Pagination = (props)=>{\r\n    //必須變數from Card list，依賴Card list\r\n    //不能用[]\r\n    const {margin ,pageBtns, pageIndex, isMobile} = props;\r\n    //PageButtons有自己的handleClick，變數名稱有衝突\r\n    //另外用一個變數儲存從CardList傳來的handleClick，而不解構賦值\r\n    const handleBtnClick = props.handlePaginationClick;\r\n    let returnElement = null;\r\n    let minPageIndex = 0, maxPageIndex = pageBtns.length - 1;\r\n\r\n    const focusPage = (i)=>{\r\n        if( i === pageIndex ) return 'currentPage';\r\n    }\r\n\r\n    if(pageBtns.length === 1) return null;\r\n    if(isMobile){\r\n        let pageBtnsArr = Array.from({length:pageBtns.length}, (_,index)=>index);\r\n        let selectValue = null;\r\n        returnElement=\r\n        <div className='pagination unselectable'>\r\n            <div className=' pageArrow' key={`prePage`}\r\n                onClick={()=>{\r\n                    selectValue = pageIndex-1;\r\n                    handleBtnClick(selectValue);\r\n                    if(selectValue > minPageIndex) document.getElementById('pageSelect').value = selectValue;\r\n                }}\r\n            >\r\n                <i className=\"fas fa-chevron-left\"/>\r\n            </div>\r\n            <div className='pageElement'>\r\n                <i className=\"selectArrow fas fa-chevron-down fa-lg\"/>\r\n                <span>{pageIndex+1}</span>\r\n                <select id='pageSelect'\r\n                        value={pageIndex}\r\n                        onChange={(e)=>handleBtnClick(Number(e.target.value))}\r\n                >\r\n                    {\r\n                        pageBtnsArr.map((i)=>(\r\n                            <option value={i}\r\n                                    key={'pageSelect_'+(i+1)}>\r\n                                {i+1}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=' pageArrow' key={`nextPage`}\r\n                onClick={()=>{\r\n                    selectValue = pageIndex+1;\r\n                    handleBtnClick(selectValue);\r\n                    if(selectValue < maxPageIndex) document.getElementById('pageSelect').value = selectValue;}}\r\n                >\r\n                <i className=\"fas fa-chevron-right\"/>\r\n            </div>\r\n        </div>;\r\n    }else{    \r\n        if(pageBtns.length > 7){\r\n            if(pageIndex - minPageIndex > 3 && maxPageIndex - pageIndex > 3){\r\n                let pages = Array.from({length:3},(_,index)=>index+pageIndex-1);\r\n                returnElement = \r\n                <div className={`pagination unselectable ${margin}`}>\r\n                    <div className='pageElement pageArrow' key={`prePage`}\r\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\r\n                        <i className=\"fas fa-chevron-left\"/>\r\n                    </div>\r\n                    <div key={'page-'+minPageIndex+1}\r\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\r\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\r\n                        {minPageIndex+1}\r\n                    </div>\r\n                    <div className='pageElement dot'/>\r\n                    {\r\n                        pages.map((i)=>(\r\n                            <div key={'page'+(i+1)}\r\n                                onClick={()=>{handleBtnClick(i)}}\r\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\r\n                                {i+1}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className='pageElement dot'/>\r\n                    <div key={'page-'+maxPageIndex+1}\r\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\r\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\r\n                        {maxPageIndex+1}\r\n                    </div>\r\n                    <div className='pageElement pageArrow' key={`nextPage`}\r\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\r\n                        <i className=\"fas fa-chevron-right\"/>\r\n                    </div>\r\n                </div>\r\n            }else if(pageIndex - minPageIndex <= 3){\r\n                let pages = Array.from({length:5},(_,index)=>index);\r\n                returnElement = \r\n                <div className={`pagination unselectable ${margin}`}>\r\n                    <div className='pageElement pageArrow' key={`prePage`}\r\n                        style={pageIndex===minPageIndex ? {visibility: 'hidden'} : {}}\r\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\r\n                        <i className=\"fas fa-chevron-left\"/>\r\n                    </div>\r\n                    {\r\n                        pages.map((i)=>(\r\n                            <div key={'page-'+(i+1)}\r\n                                onClick={()=>{handleBtnClick(i)}}\r\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\r\n                                {i+1}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className='pageElement dot'/>\r\n                    <div key={'page-'+maxPageIndex+1}\r\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\r\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\r\n                        {maxPageIndex+1}\r\n                    </div>\r\n                    <div className='pageElement pageArrow' key={`nextPage`}\r\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\r\n                        <i className=\"fas fa-chevron-right\"/>\r\n                    </div>\r\n                </div>\r\n            }else if(maxPageIndex - pageIndex <= 3){\r\n                let pages = Array.from({length:5},(_,index)=>index+maxPageIndex-4);\r\n                returnElement = \r\n                <div className={`pagination unselectable ${margin}`}>\r\n                    <div className='pageElement pageArrow' key={`prePage`}\r\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\r\n                        <i className=\"fas fa-chevron-left\"/>\r\n                    </div>\r\n                    <div key={'page-'+minPageIndex+1}\r\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\r\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\r\n                        {minPageIndex+1}\r\n                    </div>\r\n                    <div className='pageElement dot'/>\r\n                    {\r\n                        pages.map((i)=>(\r\n                            <div key={'page-'+(i+1)}\r\n                                onClick={()=>{handleBtnClick(i)}}\r\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\r\n                                {i+1}\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    <div className='pageElement pageArrow' key={`nextPage`}\r\n                        style={pageIndex===maxPageIndex ? {visibility: 'hidden'} : {}}\r\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\r\n                        <i className=\"fas fa-chevron-right\"/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        }else{\r\n            returnElement = \r\n            <div className={`pagination unselectable ${margin}`}>\r\n                {\r\n                    pageBtns.map((i)=>(\r\n                        <div key={'page-'+(i+1)}\r\n                            onClick={()=>{handleBtnClick(i)}}\r\n                            className={`pageElement pageBtn ${focusPage(i)}`}>\r\n                            {i+1}\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        }\r\n    }\r\n    return(returnElement);\r\n}\r\n\r\nexport default Pagination;","import { useCallback, useEffect, useState } from \"react\";\r\nimport DatePicker, { registerLocale } from 'react-datepicker';\r\nimport zh_TW from 'date-fns/locale/zh-TW';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst Selectors = (props)=>{\r\n\r\n    const [dateRange, setDateRange] = useState([null, null]);\r\n    const [startDate, endDate] = dateRange;\r\n    const [dateOnPicker,setDateOnPicker] = useState('');\r\n    const [selectValue,setSelectValue] = useState({dist:null,workingState:null});\r\n    const {options, condition, mapParameters, setCondition, setPageIndex, setMapParameters}= props;\r\n\r\n    const INITAIL = useCallback(()=>{\r\n        let node = document.getElementById('districtionSelect');\r\n        setCSSChosenValue(node);\r\n        setCSSChosenValue(node.previousElementSibling, node.value);\r\n        registerLocale('zh-TW',zh_TW);\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        INITAIL();\r\n        setSelectValue({dist:getSelectValue('districtionSelect'), workingState:getSelectValue('workingStateSelect')});\r\n    },[INITAIL]);\r\n\r\n    const setCSSChosenValue = (element, value=element.value)=>{\r\n        element.dataset.chosen = value;\r\n    }\r\n\r\n    const addZero2String = (time)=>{\r\n        let _time = typeof time === \"number\" ? time.toString() : time;\r\n        if(_time.length === 1) _time = '0'+_time;\r\n        return _time;\r\n    }\r\n\r\n    const clearMapInfo = ()=>{\r\n        setMapParameters({\r\n            center: {lat : 24.1512535, lng : 120.6617366},\r\n            polygon: null,\r\n            zoom: 12 + (Math.random() / 10000), //cluster的顯示問題\r\n            selectMarker: mapParameters.selectMarker,\r\n            closeInfoWindow: true\r\n        });\r\n    }\r\n\r\n    const getSelectValue = (id)=>{\r\n        let element = document.getElementById(id);\r\n        console.log(element);\r\n        let value = null;\r\n\r\n        if(element === null) value = '載入中';\r\n        else{\r\n            value =  element.value;\r\n            if(id === 'workingStateSelect'){\r\n                switch(value){\r\n                    case '0' : \r\n                        value = '全案件';\r\n                        break;\r\n                    case '是' :\r\n                        value = '施工中';\r\n                        break;\r\n                    case '否' :\r\n                        value = '未施工';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n            if(id === 'districtionSelect' && value === '0'){\r\n                value = '全地區';\r\n            }\r\n        }\r\n        \r\n        console.log(value);\r\n        return value;\r\n    }\r\n\r\n    const convertWorkingState = (value)=>{\r\n        let state = null;\r\n        switch(value){\r\n            case 0 : \r\n                state = '全案件';\r\n                break;\r\n            case '是' :\r\n                state = '施工中';\r\n                break;\r\n            case '否' :\r\n                state = '未施工';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return state;\r\n    }\r\n\r\n    const handleWorkingState = (e)=>{\r\n        let dist = condition.distriction;\r\n        let workingState = Number(e.target.value) === 0 ? 0 : e.target.value;\r\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\r\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\r\n        let _dateOnPicker = dateOnPicker;\r\n        let stack = condition.stack;\r\n        setCSSChosenValue(e.target);\r\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\r\n        setSelectValue((prevState)=>({\r\n            ...prevState,\r\n            workingState: convertWorkingState(workingState)\r\n        }));\r\n\r\n        if(stack.indexOf('workingState') === -1) stack.push('workingState');\r\n        else if(workingState === 0){\r\n            stack = stack.filter((e)=>e!=='workingState');\r\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('workingState',[workingState, dist, startDate, endDate, _dateOnPicker]);\r\n        }\r\n\r\n        clearMapInfo();\r\n        setPageIndex(0);\r\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\r\n        else setDateOnPicker('');\r\n        setCondition({workingState: workingState,\r\n                      distriction:dist,\r\n                      date:{\r\n                        start: startDate === null ? null : {...startDate},\r\n                        end: endDate === null ? null : {...endDate}\r\n                      },\r\n                      stack:stack});\r\n    }\r\n    \r\n    const handleDistChange = (e)=>{\r\n        let dist = Number(e.target.value) === 0 ? 0 : e.target.value;\r\n        let workingState = condition.workingState;\r\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\r\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\r\n        let _dateOnPicker = dateOnPicker;\r\n        let stack = condition.stack;\r\n        setCSSChosenValue(e.target);\r\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\r\n        setSelectValue((prevState)=>({\r\n            ...prevState,\r\n            dist: dist === 0 ? '全地區' : dist\r\n        }));\r\n\r\n        if(stack.indexOf('distriction') === -1) stack.push('distriction');\r\n        else if(dist === 0){\r\n            stack = stack.filter((e)=>e!=='distriction');\r\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('distriction',[workingState, dist, startDate, endDate, _dateOnPicker]);\r\n        }\r\n\r\n        clearMapInfo();\r\n        setPageIndex(0);\r\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\r\n        else setDateOnPicker('');\r\n        setCondition({workingState: workingState,\r\n                      distriction:dist,\r\n                      date:{\r\n                          start: startDate === null ? null : {...startDate},\r\n                          end: endDate === null ? null : {...endDate}\r\n                      },\r\n                      stack:stack});\r\n    }\r\n\r\n    const handleDateChange = (update)=>{\r\n        setDateRange(update);\r\n        //如果結束日期尚未選擇，只更新date range。\r\n        if(update[0] !== null && update[1] === null){\r\n            setDateOnPicker(`${update[0].getFullYear()}/${addZero2String(update[0].getMonth() + 1)}/${addZero2String(update[0].getDate())} -`);\r\n            return;\r\n        }\r\n        //datepicker按清空時執行，日期沒選完不會到這邊。\r\n        if(update[0] === null && update[1] === null){\r\n            let stack = condition.stack;\r\n            let _dist = condition.distriction;\r\n            let _workingState = condition.workingState;\r\n            stack = stack.filter((e)=>e!=='date');\r\n            // [stack, [_workingState, _dist, , , ,]] = popStack('date',[_workingState, _dist, null, null, null])\r\n\r\n            clearMapInfo();\r\n            setDateOnPicker('');\r\n            setCondition({workingState:_workingState, distriction:_dist, date:{start: null, end: null}, stack:stack});\r\n            return;\r\n        }\r\n\r\n        let dist = condition.distriction;\r\n        let workingState = condition.workingState;\r\n        let startDate = {year: update[0].getFullYear(), month: update[0].getMonth() + 1, day: update[0].getDate()}\r\n        let endDate = {year: update[1].getFullYear(), month: update[1].getMonth() + 1, day: update[1].getDate()}\r\n        let stack = condition.stack;\r\n        if(stack.indexOf('date') === -1) stack.push('date');\r\n        clearMapInfo();\r\n        setPageIndex(0);\r\n        setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\r\n        setCondition({workingState:workingState, distriction:dist, date:{start: {...startDate}, end: {...endDate}}, stack:stack});\r\n    }\r\n\r\n    let workingStateArr = Array.from({length: options.workingState.length},(_,index)=>index);\r\n    let distArr = Array.from({length: options.distriction.length},(_,index)=>index);\r\n    console.log('render selectors');\r\n    return(\r\n        <div className='selectors'>\r\n            <div className='selectContainer'>\r\n                <i className=\"selectArrow fas fa-chevron-down\"/>\r\n                <select name='workingState'\r\n                        id='workingStateSelect'\r\n                        defaultValue='是'\r\n                        onChange={handleWorkingState}\r\n                >\r\n                    <option value={0}>全案件</option>\r\n                    {\r\n                        workingStateArr.map((i)=>(\r\n                            <option value={options.workingState[i]} key={options.workingState[i]}>\r\n                                {options.workingState[i]==='是' ? '施工中' : '未施工'}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <span>{selectValue.workingState}</span>\r\n            </div>\r\n            <div className='selectContainer'>\r\n                <i className=\"selectArrow fas fa-chevron-down\"/>\r\n                <select name='distriction'\r\n                        id='districtionSelect'\r\n                        defaultValue='0'\r\n                        onChange={handleDistChange}\r\n                >\r\n                    <option value={0}>全地區</option>\r\n                    {\r\n                        distArr.map((i)=>(\r\n                            <option value={options.distriction[i]} key={options.distriction[i]}>{options.distriction[i]}</option>\r\n                        ))\r\n                    }\r\n                </select>   \r\n                <span>{selectValue.dist}</span>\r\n            </div>\r\n            <DatePicker\r\n                value={dateOnPicker}\r\n                locale='zh-TW'\r\n                wrapperClassName='dateSelectContainer'\r\n                className='dateSelect'\r\n                placeholderText='日期範圍'\r\n                dateFormat='yyyy/MM/dd'\r\n                selectsRange={true}\r\n                startDate={startDate}\r\n                endDate={endDate}\r\n                minDate={new Date(Object.values(options.date.start))}\r\n                maxDate={new Date(Object.values(options.date.end))}\r\n                isClearable\r\n                shouldCloseOnSelect={false}\r\n                onChange={handleDateChange}\r\n                onFocus={e => e.target.blur()}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Selectors;","import { useMemo, useState } from 'react';\r\nimport Card from './Card';\r\nimport CloseButton from './CloseButton';\r\nimport Pagination from './Pagination';\r\nimport Selectors from './Selectors';\r\n\r\nconst InfoBlock = (props)=>{\r\n\r\n    const {closeInfoBlock, handleCloseClick, isMobile} = props;\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n\r\n    let cardsNum = useMemo(()=>{\r\n            let arr = [];\r\n            let length = 0;\r\n\r\n            if(props.value === null) return;\r\n            else if(props.value.length > 1) length =  props.value[pageIndex].length;\r\n            else if(props.value.length === 1) length =  props.value[0].length;\r\n            else length = 0;\r\n\r\n            arr = Array.from({length: length},(_,index) => index);\r\n            return(arr);\r\n    },[props.value, pageIndex]);\r\n\r\n    const handlePaginationClick = (x)=>{\r\n        if(x > (props.value.length - 1) || x < 0) return;\r\n        document.getElementById('topAnchor').scrollIntoView(false);\r\n        setPageIndex(x);\r\n    }\r\n    \r\n    const getCSSState = (condition)=>{\r\n        let state = '';\r\n        if(condition === null) state = 'hide';\r\n        else if(condition === true) state = 'close';\r\n        else if(condition === false) state = 'open';\r\n        return state;\r\n    }\r\n\r\n    if(props.value === 'loading'){\r\n        return(\r\n            <div className={`infoBlockContainer`}>\r\n            <div className='infoBlock' style={{paddingTop:'0', backgroundColor:'#ececec'}}>\r\n                <div className='loading'>\r\n                    <i className=\"fas fa-circle-notch fa-lg\"/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.value === null){\r\n        return(\r\n            <div className='infoBlockContainer'>\r\n            <div className='infoBlock'>\r\n                <div className='noContent'>\r\n                    <div className='exclamationMark'><i className=\"fas fa-exclamation-triangle fa-lg\"/></div>\r\n                    <div>發生錯誤，請稍後在試</div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.length === 0){\r\n        return(\r\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\r\n            <div className='infoBlock'>\r\n                <CloseButton handleCloseClick={handleCloseClick}/>\r\n                <div className='toolbarContainer'>\r\n                    <Selectors\r\n                        options={props.option}\r\n                        condition={props.condition}\r\n                        mapParameters={props.mapParameters}\r\n                        setCondition={props.setCondition}\r\n                        setMapParameters={props.setMapParameters}\r\n                        setPageIndex={setPageIndex}\r\n                    />\r\n                </div>\r\n                <div className='cardsListContainer'>\r\n                <div className='cardsList'>\r\n                    <div className='noContent'>\r\n                        沒有符合條件的資料\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        let pageBtns = Array.from({length: props.value.length},(_,index)=>index);\r\n        return(\r\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\r\n            {/* <div className={`infoBlockContainer ${closeInfoBlock ? 'close':'open'}`}> */}\r\n            <div className='infoBlock'>\r\n                <CloseButton handleCloseClick={handleCloseClick}\r\n                />\r\n                <div className='toolbarContainer'>\r\n                    <Selectors\r\n                        options={props.option}\r\n                        condition={props.condition}\r\n                        setCondition={props.setCondition}\r\n                        setPageIndex={setPageIndex}\r\n                        mapParameters={props.mapParameters}\r\n                        setMapParameters={props.setMapParameters}\r\n                    />\r\n                </div>\r\n                <div className='cardsListContainer'>\r\n                <div className='cardsList'>\r\n                    <Pagination\r\n                        pageBtns={pageBtns}\r\n                        pageIndex={pageIndex}\r\n                        handlePaginationClick={handlePaginationClick}\r\n                        isMobile={isMobile}\r\n                    />\r\n                    <div id='topAnchor' style={{marginBottom:'2em'}}/>\r\n                    {\r\n                        cardsNum.map((i)=>(\r\n                            <Card key={'card'+(pageIndex*10+i+1)}\r\n                                value={props.value[pageIndex][i]}\r\n                                setMapParameters={props.setMapParameters}\r\n                            />\r\n                        ))\r\n                    }\r\n                    <Pagination\r\n                        pageBtns={pageBtns}\r\n                        pageIndex={pageIndex}\r\n                        handlePaginationClick={handlePaginationClick}\r\n                        isMobile={isMobile}\r\n                    />\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoBlock;","const InfoButton = (props)=>{\r\n\r\n    let {closeInfoBlock, makerMessage, handleCloseClick, handleMakerMessageClick, userLocation, mapParameters, setMapParameters} = props;\r\n\r\n    const handleLocationClick = ()=>{\r\n        let randomNum = Math.random() / 1000000;\r\n        setMapParameters({\r\n            center: {lat:userLocation.lat + randomNum, lng:userLocation.lng + randomNum},\r\n            polygon: mapParameters.polygon,\r\n            zoom: mapParameters.zoom,\r\n            selectMarker: mapParameters.selectMarker,\r\n            closeInfoWindow: false\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className={`infoButtonContainer ${(closeInfoBlock !== false && makerMessage !== true) ? 'open':'close'}`}>\r\n            <div className='button' onClick={handleCloseClick}>\r\n                <i className=\"fas fa-search fa-lg\"/>\r\n            </div>\r\n            <div className='button' onClick={handleLocationClick} style={{display:userLocation===null ? 'none' : ''}}>\r\n                <i className=\"fas fa-map-marker-alt fa-lg\"/>\r\n            </div>\r\n            <div className='button' onClick={()=>{\r\n                handleMakerMessageClick();\r\n            }}>\r\n                <i className=\"fas fa-info fa-lg\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InfoButton;","import CloseButton from \"./CloseButton\";\r\nconst MakerMessage = (props)=>{\r\n\r\n    let {makerMessage, handleMakerMessageClick} = props;\r\n\r\n    const getCSSState = (condition)=>{\r\n        let state = '';\r\n        if(condition === null) state = 'hide';\r\n        else if(condition === true) state = 'open';\r\n        else if(condition === false) state = 'close';\r\n        return state;\r\n    }\r\n\r\n    return(\r\n        <div className={`infoBlockContainer ${getCSSState(makerMessage)}`}>\r\n        <div className='infoBlock maker'>\r\n            <CloseButton handleMakerMessageClick={handleMakerMessageClick}/>\r\n            <div className='makerMessage flex'>\r\n                <img src={process.env.PUBLIC_URL+'/img/logo.png'} alt={'Kai\\'s logo'}/>\r\n                <article>\r\n                    <p>嗨，我是Kai。</p>\r\n                    <p>台中道路施工地圖是為了練習API串接所做的side project。</p>\r\n                    <p>還有很多細節需要改進，還有太多太多的知識要學習。學海無涯，只能繼續精進。</p>\r\n                </article>\r\n                <div/>\r\n                <div className='socialMedia'>\r\n                    <a href='https://github.com/TKaiC666' target='_blank' rel=\"noreferrer\">\r\n                        <i className=\"fab fa-github fa-lg\"/>\r\n                    </a>\r\n                    <a href='https://www.facebook.com/profile.php?id=100002803117493' target='_blank' rel=\"noreferrer\">\r\n                        <i className=\"fab fa-facebook fa-lg\"/>\r\n                    </a>\r\n                    <a href='https://www.instagram.com/attifmai/' target='_blank' rel=\"noreferrer\">\r\n                        <i className=\"fab fa-instagram fa-lg\"/>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MakerMessage;","import React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport Map from './Map'\r\nimport InfoBlock from './InfoBlock';\r\nimport InfoButton from './InfoButton';\r\nimport MakerMessage from './MakerMessage';\r\n\r\nconst TaichungRCIApp = ()=>{\r\n    const [isMobile, setIsMobile] = useState(null);\r\n    const [userLocation, setUserLocation] = useState(null);\r\n    const [closeInfoBlock, setCloseInfoBlock] = useState(null);\r\n    const [makerMessage, setMakerMessage] = useState(null);\r\n    const [constructionsData, setConstructionsData] = useState('loading');\r\n    const [condition, setCondition] = useState({workingState:'是', distriction:0, date:{start:null,end:null}, stack:['workingState']});\r\n    const [mapParameters, setMapParameters] = useState({\r\n        center:{lat : 24.1512535, lng : 120.6617366},\r\n        polygon: null,\r\n        zoom: 12,\r\n        selectMarker: null,\r\n        closeInfoWindow: null\r\n    });\r\n\r\n    const INITAIL = useCallback(()=>{\r\n        let bool = null;\r\n        changeInfoWindowHeight();\r\n        bool = isWidthUnder(428);\r\n        window.addEventListener('resize', changeInfoWindowHeight);\r\n        window.addEventListener('resize', ()=>isWidthUnder(428));\r\n        findUserLocation();\r\n        initialInfoBlockDisplay(bool);\r\n    },[]);\r\n\r\n    const findUserLocation = ()=>{\r\n\r\n        const handleUserLocation = (position)=>{\r\n            let _mapParameters = {\r\n                center:{lat : position.coords.latitude, lng : position.coords.longitude},\r\n                polygon: null,\r\n                zoom: 12,\r\n                selectMarker: null,\r\n                closeInfoWindow: null\r\n            };\r\n            setMapParameters(_mapParameters);\r\n            setUserLocation(_mapParameters.center);\r\n        }\r\n\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition((position)=>{\r\n                handleUserLocation(position);\r\n            });\r\n        }else{\r\n            console.log('geolocation is not available');\r\n        }\r\n    }\r\n\r\n    const initialInfoBlockDisplay = (bool)=>{\r\n        if(bool === false){\r\n            setCloseInfoBlock(false);\r\n        }\r\n    }\r\n\r\n    const changeInfoWindowHeight = ()=>{\r\n        document.documentElement.style.setProperty('--vh', `${window.innerHeight/100}px`);\r\n    }\r\n\r\n    const isWidthUnder = (width)=>{\r\n        let bool = null;\r\n        if(window.innerWidth <= width) bool = true;\r\n        else bool = false;\r\n        setIsMobile(bool);\r\n        return bool;\r\n    }\r\n\r\n    const convertDate2Num = (date)=>{\r\n        let [year,month,day] = Object.values(date)\r\n        year = year.toString();\r\n        month = month.toString();\r\n        day = day.toString();\r\n\r\n        if(month.length === 1) month = '0' + month;\r\n        if(day.length === 1) day = '0' + day;\r\n\r\n        return parseInt((year + month + day), 10);\r\n    }\r\n\r\n    const sliceData = (data)=>{\r\n        let _data = data;\r\n        let newData = [];\r\n        for(let i = 0; i < _data.length; i+=10){\r\n            newData.push(_data.slice(i,i+10));\r\n        }\r\n        return newData;\r\n    }\r\n\r\n    const fetchData = useCallback(()=>{\r\n        \r\n        const reconstructData = (data)=>{\r\n\r\n            function convertData(data){\r\n\r\n                const convertStringCoor2Num = (lat, lng)=>{\r\n                    let locationObject = {lat : 0, lng : 0};\r\n                    locationObject.lat = Number(lat);\r\n                    locationObject.lng = Number(lng);\r\n            \r\n                    return locationObject;\r\n                }\r\n            \r\n                const splitPolygonData = (polygon)=>{\r\n                    let coordArray = polygon.slice(12,polygon.length-2);\r\n                    if(polygon === ''){\r\n                        return null;\r\n                    }\r\n\r\n                    coordArray = coordArray.split(', ');\r\n                    coordArray = coordArray.map((i) => i.split(' '));\r\n                    coordArray = coordArray.map((i) => convertStringCoor2Num(i[1],i[0]));\r\n            \r\n                    return coordArray;\r\n                }\r\n\r\n                let convertPart = {\r\n                    date : {\r\n                        start : {\r\n                            year : Number(data['核准起日'].substring(0,3)) + 1911,\r\n                            month : Number(data['核准起日'].substring(3,5)),\r\n                            day : Number(data['核准起日'].substring(5))\r\n                        },\r\n                        end : {\r\n                            year : Number(data['核准迄日'].substring(0,3)) + 1911,\r\n                            month : Number(data['核准迄日'].substring(3,5)),\r\n                            day : Number(data['核准迄日'].substring(5))\r\n                        }\r\n                    },\r\n                    personInCharge : {\r\n                        name : data['承辦人'].substring(0,1) + '◯◯'\r\n                    },\r\n                    coordinate : {\r\n                        lat : convertStringCoor2Num(data['中心點Y坐標'],data['中心點X坐標']).lat,\r\n                        lng : convertStringCoor2Num(data['中心點Y坐標'],data['中心點X坐標']).lng,\r\n                        polygon : splitPolygonData(data['施工範圍坐標'])\r\n                    }\r\n                }\r\n\r\n                return convertPart;\r\n            }\r\n\r\n            let convertedPart = convertData(data);\r\n\r\n            let newData = {\r\n                title : data['工程名稱'],\r\n                distriction : data['區域名稱'],\r\n                address : data['地點'],\r\n                pipeType : data['管線工程類別'],\r\n                constructionType : data['案件類別'],\r\n                workingState: data['是否開工'],\r\n                date : {\r\n                    start : {\r\n                        year : convertedPart.date.start.year,\r\n                        month : convertedPart.date.start.month,\r\n                        day : convertedPart.date.start.day\r\n                    },\r\n                    end : {\r\n                        year : convertedPart.date.end.year,\r\n                        month :  convertedPart.date.end.month,\r\n                        day :  convertedPart.date.end.day\r\n                    }\r\n                },\r\n                applicationNumber : data['申請書編號'],\r\n                licenseNumber : data['許可證編號'],\r\n                applicant : data['申請單位'],\r\n                contractor : {\r\n                    name : data['廠商名稱'],\r\n                    phone : data['廠商電話']\r\n                },\r\n                personInCharge : {\r\n                    name : convertedPart.personInCharge.name,\r\n                    phone : data['承辦人電話']\r\n                },\r\n                coordinate : {\r\n                    lat : convertedPart.coordinate.lat,\r\n                    lng : convertedPart.coordinate.lng,\r\n                    polygon : convertedPart.coordinate.polygon\r\n                }\r\n            };\r\n\r\n            return newData;\r\n        }\r\n\r\n        const handleData = (data)=>{\r\n            let _data = data;\r\n            let newData = [];\r\n            for(let i = 0; i < _data.length; i++){\r\n                newData.push(reconstructData(_data[i]));\r\n            }\r\n            return(newData);\r\n        }\r\n\r\n        const fetchingData = ()=>{\r\n            const API_URL = 'https://datacenter.taichung.gov.tw/swagger/OpenData/863064b3-7678-437e-9161-8dcda3d95ab7';\r\n\r\n            console.time('fetch花費時間');\r\n            fetch(API_URL)\r\n            .then((response) => {\r\n                console.timeEnd('fetch花費時間');\r\n                if(response.status === 200){\r\n                    return(response.text());\r\n                }\r\n                throw new Error('response was not ok.');\r\n            })\r\n            .then((data)=>{\r\n                if(data[0] !== '['){\r\n                    console.error('fetch error : \\n',data);\r\n                    setConstructionsData(null);\r\n                }else{\r\n                    let newData = handleData(JSON.parse(data));\r\n                    setConstructionsData(newData);\r\n                }\r\n            }).catch((error)=>{\r\n                console.error('fetch error : ', error.message);\r\n                setConstructionsData(null);\r\n            });\r\n            \r\n        }\r\n\r\n        fetchingData();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        INITAIL();\r\n        fetchData();\r\n    },[INITAIL,fetchData]);\r\n\r\n    const filteredData = useMemo(()=>{\r\n\r\n        const filteringData = (condition)=>{\r\n\r\n            let data = constructionsData;\r\n            let newData = [];\r\n            if(data === null || data === 'loading'){\r\n                newData = data;\r\n            }else if(condition.stack.length === 3){\r\n                newData = data.filter((object) => (\r\n                    ((convertDate2Num(condition.date.start) >= convertDate2Num(object.date.start)\r\n                    && convertDate2Num(condition.date.start) <= convertDate2Num(object.date.end))\r\n                    || (convertDate2Num(condition.date.end) >= convertDate2Num(object.date.start)\r\n                    && convertDate2Num(condition.date.end) <= convertDate2Num(object.date.end)))\r\n                    && object.workingState === condition.workingState && object.distriction === condition.distriction\r\n                ));\r\n            }else if(condition.stack.length === 2){\r\n                if(condition.stack.indexOf('date') !== -1){\r\n                    let anotherCondition = condition.stack[1 - condition.stack.indexOf('date')];\r\n                    newData = data.filter((object) => (\r\n                        ((convertDate2Num(condition.date.start) >= convertDate2Num(object.date.start)\r\n                        && convertDate2Num(condition.date.start) <= convertDate2Num(object.date.end))\r\n                        || (convertDate2Num(condition.date.end) >= convertDate2Num(object.date.start)\r\n                        && convertDate2Num(condition.date.end) <= convertDate2Num(object.date.end))) &&\r\n                        object[anotherCondition] === condition[anotherCondition]\r\n                    ));\r\n                }else{\r\n                    newData = data.filter((object) => (\r\n                        object.workingState === condition.workingState && object.distriction === condition.distriction\r\n                    ));\r\n                }\r\n            }else if(condition.stack.length === 1){\r\n                if(condition.distriction !== 0 ){\r\n                    newData = data.filter((object) => object.distriction === condition.distriction);\r\n                }else if(condition.date.start !== null && condition.date.end !== null){\r\n                    newData = data.filter((object) => (\r\n                        (convertDate2Num(condition.date.start) >= convertDate2Num(object.date.start)\r\n                           && convertDate2Num(condition.date.start) <= convertDate2Num(object.date.end))\r\n                           || (convertDate2Num(condition.date.end) >= convertDate2Num(object.date.start)\r\n                           && convertDate2Num(condition.date.end) <= convertDate2Num(object.date.end))\r\n                    ));\r\n                }else if(condition.workingState !== 0){\r\n                    newData = data.filter((object) => object.workingState === condition.workingState);\r\n                }\r\n            }\r\n\r\n            return newData;\r\n        };\r\n\r\n        let newData = filteringData(condition);\r\n        return(newData);\r\n    },[condition, constructionsData]);\r\n\r\n    const selectorsOptions = useMemo(()=>{\r\n        let _stack = condition.stack;\r\n        let _options = {workingState:[], distriction:[], date:{start:{},end:{}}};\r\n        if(_stack.length >= 0 && constructionsData !== 'loading' && constructionsData !== null){\r\n            _options.date.start = {...constructionsData[0].date.start};\r\n            _options.date.end = {...constructionsData[0].date.end};\r\n            for(let object of constructionsData){\r\n                if(_options.workingState.indexOf(object.workingState) === -1) _options.workingState.push(object.workingState);\r\n                if(_options.distriction.indexOf(object.distriction) === -1)  _options.distriction.push(object.distriction);\r\n                if(convertDate2Num(object.date.start) <= convertDate2Num(_options.date.start)) _options.date.start = {...object.date.start};\r\n                if(convertDate2Num(object.date.end) >= convertDate2Num(_options.date.end)) _options.date.end = {...object.date.end};\r\n            }\r\n        }\r\n        return _options;\r\n    },[condition.stack, constructionsData]);\r\n\r\n    const handleCloseClick = ()=>{\r\n        let _closeInfoBlock = closeInfoBlock;\r\n        if(_closeInfoBlock !== null){\r\n            _closeInfoBlock = !_closeInfoBlock;\r\n        }else _closeInfoBlock = false;\r\n        setCloseInfoBlock(_closeInfoBlock);\r\n    }\r\n\r\n    const handleMakerMessageClick = ()=>{\r\n        let _makerMessage = makerMessage;\r\n        if(makerMessage !== null){\r\n            _makerMessage = !_makerMessage;\r\n        }else _makerMessage = true;\r\n        setMakerMessage(_makerMessage);\r\n    }\r\n\r\n    if(constructionsData === 'loading' || constructionsData === null){\r\n        return(\r\n            <div>\r\n                <Map constructionsData={null} \r\n                    mapParameters={mapParameters}\r\n                    setMapParameters={setMapParameters}\r\n                />\r\n                <InfoBlock value={constructionsData}/>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        let data = null;\r\n        if(condition.distriction === 0 && condition.date.start === null && condition.date.end === null && condition.workingState === 0){\r\n            data = constructionsData;\r\n        }else{\r\n            data = filteredData;\r\n        }\r\n        return(\r\n            <div className='container'>\r\n                <Map constructionsData={sliceData(data)}\r\n                     mapParameters={mapParameters}\r\n                     closeInfoBlock={closeInfoBlock}\r\n                     setMapParameters={setMapParameters}\r\n                     makerMessage={makerMessage}\r\n                     isMobile={isMobile}\r\n                     userLocation={userLocation}\r\n                />\r\n                <InfoButton closeInfoBlock={closeInfoBlock}\r\n                            makerMessage={makerMessage}\r\n                            handleCloseClick={handleCloseClick}\r\n                            handleMakerMessageClick={handleMakerMessageClick}\r\n                            userLocation={userLocation}\r\n                            mapParameters={mapParameters}\r\n                            setMapParameters={setMapParameters}\r\n                />\r\n                <InfoBlock value={sliceData(data)}\r\n                           length={data.length}\r\n                           option={selectorsOptions}\r\n                           condition={condition}\r\n                           mapParameters={mapParameters}\r\n                           closeInfoBlock={closeInfoBlock}\r\n                           isMobile={isMobile}\r\n                           handleCloseClick={handleCloseClick}\r\n                           setCondition={setCondition}\r\n                           setMapParameters={setMapParameters}\r\n                />\r\n                <MakerMessage makerMessage={makerMessage}\r\n                              handleMakerMessageClick={handleMakerMessageClick}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaichungRCIApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TaichungRCIApp from './component/TaichungRCIApp';\r\nimport './index.css';\r\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <TaichungRCIApp/>\r\n    </React.StrictMode>\r\n    ,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}