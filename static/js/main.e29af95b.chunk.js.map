{"version":3,"sources":["component/CardMini.js","component/Map.js","component/Card.js","component/CloseButton.js","component/Pagination.js","component/Selectors.js","component/InfoBlock.js","component/InfoButton.js","component/MakerMessage.js","component/TaichungRCIApp.js","index.js"],"names":["CardMini","props","data","value","_jsxs","className","children","_jsx","concat","workingState","pipeType","date","start","year","month","day","end","constructionType","title","distriction","address","mapStyle","featureType","elementType","stylers","visibility","color","lightness","polygonOptions","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","clustersOptions","styles","textSize","height","width","url","process","Map","_useState","useState","_useState2","_slicedToArray","gridSize","setGridSize","constructionsData","mapParameters","closeInfoBlock","setMapParameters","isMobile","makerMessage","userLocation","mapRef","useRef","isClusterWork","length","renderCluster","useMemo","renderMarker","cluster","markersNum","Array","from","_","index","map","i","Math","floor","coordinate","lat","lng","Marker","position","Number","onClick","newCenter","current","getCenter","toJSON","center","polygon","zoom","selectMarker","closeInfoWindow","handleMarkerClick","clusterer","noClustererRedraw","icon","scaledSize","MarkerClusterer","averageCenter","options","id","LoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","minZoom","maxZoom","disableDefaultUI","onLoad","handleMapOnLoad","onZoomChanged","size","bool","isInfoWindowShow","InfoWindow","pixelOffset","window","google","maps","Size","onCloseClick","Polygon","path","Card","showLess","setShowLess","style","randomNum","random","handleLocationData","applicationNumber","licenseNumber","applicant","contractor","name","phone","personInCharge","CloseButton","handleCloseClick","handleMakerMessageClick","undefined","Pagination","margin","pageBtns","pageIndex","handleBtnClick","handlePaginationClick","returnElement","maxPageIndex","focusPage","pageBtnsArr","selectValue","document","getElementById","onChange","e","target","pages","minPageIndex","Selectors","dateRange","setDateRange","_dateRange","startDate","endDate","_useState3","_useState4","dateOnPicker","setDateOnPicker","_useState5","dist","_useState6","setSelectValue","condition","setCondition","setPageIndex","INITAIL","useCallback","node","setCSSChosenValue","previousElementSibling","registerLocale","zh_TW","useEffect","getSelectValue","element","arguments","dataset","chosen","addZero2String","time","_time","toString","clearMapInfo","convertWorkingState","state","workingStateArr","distArr","defaultValue","_objectSpread","_dateOnPicker","stack","prevState","indexOf","push","filter","DatePicker","locale","wrapperClassName","placeholderText","dateFormat","selectsRange","minDate","Date","Object","values","maxDate","isClearable","shouldCloseOnSelect","update","_dist","_workingState","getFullYear","getMonth","getDate","onFocus","blur","InfoBlock","cardsNum","x","scrollIntoView","getCSSState","paddingTop","backgroundColor","option","marginBottom","InfoButton","display","MakerMessage","src","alt","href","rel","TaichungRCIApp","setIsMobile","setUserLocation","setCloseInfoBlock","_useState7","_useState8","setMakerMessage","_useState9","_useState10","setConstructionsData","_useState11","_useState12","_useState13","_useState14","changeInfoWindowHeight","isWidthUnder","addEventListener","findUserLocation","initialInfoBlockDisplay","navigator","geolocation","getCurrentPosition","_mapParameters","coords","latitude","longitude","handleUserLocation","console","log","documentElement","setProperty","innerHeight","innerWidth","convertDate2Num","_Object$values","_Object$values2","parseInt","sliceData","_data","newData","slice","fetchData","reconstructData","convertedPart","convertStringCoor2Num","locationObject","substring","test","replace","split","_coordinate$split","_coordinate$split2","lngString","wrongLatString","splitPolygonData","convertData","fetch","then","response","timeEnd","status","text","Error","error","handleData","JSON","parse","catch","message","filteredData","object","anotherCondition","filteringData","selectorsOptions","_options","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","_closeInfoBlock","_makerMessage","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.e29af95b.chunk.js","sourcesContent":["\nconst CardMini = (props)=>{\n    let data = props.value;\n    return(\n        <div className='cardMini'>\n            <div className='title'>\n                <div className={`state inlineBlock ${data.workingState === '是' ? 'working' : 'notWorking'}`}>\n                    {data.workingState === '是' ? '施工中' : '未施工'}\n                </div>\n                <div className='pipeType inlineBlock'>\n                    {data.pipeType}\n                </div>\n            </div>\n            <div className='title'>\n                <div className='date'>\n                    <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span>\n                    <i className=\"fas fa-caret-right fa-lg\"/>\n                    <span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\n                </div>\n            </div>\n            <div>\n                <div className='item'>案件類別</div>\n                <div className='data'>{data.constructionType}</div>\n            </div>\n            <div>\n                <div className='item'>工程名稱</div>\n                <div className='data'>{data.title}</div>\n            </div>\n            <div>\n                <div className='item'>地點</div>\n                <div className='data last'>{data.distriction + data.address}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default CardMini;","import React, { useMemo, useRef, useState } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  InfoWindow,\n  MarkerClusterer,\n  Marker,\n  Polygon,\n} from \"@react-google-maps/api\";\nimport CardMini from \"./CardMini\";\n\nconst Map = (props) => {\n  const [gridSize, setGridSize] = useState(60);\n  const {\n    constructionsData,\n    mapParameters,\n    closeInfoBlock,\n    setMapParameters,\n    isMobile,\n    makerMessage,\n    userLocation,\n  } = props;\n  const mapRef = useRef(null);\n  let isClusterWork =\n    constructionsData !== null && constructionsData.length !== 0 ? true : false;\n\n  const changeGridSize = () => {\n    let size = null;\n    if (!mapRef.current || mapRef.current.zoom <= 18) size = 60;\n    else if (mapRef.current.zoom > 18) size = 1;\n    setGridSize(size);\n  };\n\n  const handleMapOnLoad = (map) => {\n    mapRef.current = map;\n  };\n\n  const handleInfoWindowOnCloseClick = () => {\n    setMapParameters({\n      center: mapParameters.center,\n      polygon: mapParameters.polygon,\n      zoom: mapParameters.zoom,\n      selectMarker: null,\n      closeInfoWindow: true,\n    });\n  };\n\n  const isInfoWindowShow = () => {\n    let bool = false;\n    if (mapParameters.closeInfoWindow === true) bool = false;\n    else if (mapParameters.selectMarker !== null) bool = true;\n    return bool;\n  };\n\n  const renderCluster = useMemo(() => {\n    const handleMarkerClick = (i) => {\n      // center = mapRef.current.center;\n      let data = constructionsData[Math.floor(i / 10)][i % 10];\n      let newCenter = mapRef.current.getCenter().toJSON();\n\n      setMapParameters({\n        center: newCenter,\n        polygon: data.coordinate.polygon,\n        zoom: mapParameters.zoom,\n        selectMarker: data,\n        closeInfoWindow: false,\n      });\n    };\n\n    const renderMarker = (cluster) => {\n      let markersNum =\n        (constructionsData.length - 1) * 10 +\n        constructionsData[constructionsData.length - 1].length;\n      let markers = Array.from({ length: markersNum }, (_, index) => index);\n      return markers.map(\n        (i) =>\n          constructionsData[Math.floor(i / 10)][i % 10].coordinate.lat !== 0 &&\n          constructionsData[Math.floor(i / 10)][i % 10].coordinate.lng !==\n            0 && (\n            <Marker\n              key={\"marker_\" + i}\n              position={{\n                lat: Number(\n                  constructionsData[Math.floor(i / 10)][i % 10].coordinate.lat\n                ),\n                lng: Number(\n                  constructionsData[Math.floor(i / 10)][i % 10].coordinate.lng\n                ),\n              }}\n              onClick={() => handleMarkerClick(i)}\n              clusterer={cluster}\n              noClustererRedraw={true}\n              icon={\n                constructionsData[Math.floor(i / 10)][i % 10].workingState ===\n                \"是\"\n                  ? {\n                      url: process.env.PUBLIC_URL + \"/img/marker/cone.png\",\n                      scaledSize: { width: 37, height: 37 },\n                    }\n                  : {\n                      url: process.env.PUBLIC_URL + \"/img/marker/cone_gray.png\",\n                      scaledSize: { width: 37, height: 37 },\n                    }\n              }\n            />\n          )\n      );\n    };\n\n    return (\n      isClusterWork && (\n        <MarkerClusterer\n          key=\"markerClusterer\"\n          averageCenter={true}\n          options={clustersOptions}\n          gridSize={gridSize}\n        >\n          {(cluster) => renderMarker(cluster)}\n        </MarkerClusterer>\n      )\n    );\n  }, [\n    constructionsData,\n    isClusterWork,\n    gridSize,\n    mapParameters,\n    setMapParameters,\n  ]);\n\n  const mapCoverState = () => {\n    if (constructionsData === null) return \"open\";\n    else if (isMobile) {\n      if (closeInfoBlock === null && makerMessage === null) return \"close\";\n      else if (closeInfoBlock === false || makerMessage === true) return \"open\";\n      else if (closeInfoBlock === true || makerMessage === false)\n        return \"close\";\n    } else {\n      return \"close\";\n    }\n  };\n\n  return (\n    <div className=\"mapContainer\">\n      <div id=\"mapCover\" className={`mapCover ${mapCoverState()}`} />\n      <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAP_API_KEY}>\n        <GoogleMap\n          mapContainerStyle={{\n            width: \"100%\",\n            height: \"inherit\",\n          }}\n          zoom={mapParameters.zoom}\n          center={mapParameters.center}\n          // center={{lat : mapParameters.center.lat, lng : mapParameters.center.lng - (window.innerWidth * 0.00000015)}}\n          options={{\n            styles: mapStyle,\n            minZoom: 11,\n            maxZoom: 20,\n            disableDefaultUI: true,\n          }}\n          onLoad={(map) => {\n            handleMapOnLoad(map);\n          }}\n          onZoomChanged={changeGridSize}\n        >\n          {renderCluster}\n          {userLocation !== null && (\n            <Marker key=\"userLocation\" position={userLocation} zIndex={100} />\n          )}\n          {isInfoWindowShow() && (\n            <InfoWindow\n              position={{\n                lat: mapParameters.selectMarker.coordinate.lat,\n                lng: mapParameters.selectMarker.coordinate.lng,\n              }}\n              options={{\n                pixelOffset: new window.google.maps.Size(0, -45),\n              }}\n              onCloseClick={handleInfoWindowOnCloseClick}\n            >\n              <CardMini value={mapParameters.selectMarker} />\n            </InfoWindow>\n          )}\n          {mapParameters.polygon && (\n            <Polygon path={mapParameters.polygon} options={polygonOptions} />\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nconst mapStyle = [\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.natural\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#f0f0f0\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      // {\n      //     \"color\": \"#88cece\"\n      // }\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n      {\n        color: \"#ec7868\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#3da7a7\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#cccccc\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#f9f9f9\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        lightness: 700,\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#83cfe2\",\n      },\n    ],\n  },\n];\n\nconst polygonOptions = {\n  fillColor: \"#FF7777\",\n  fillOpacity: 0.1,\n  strokeColor: \"#FF7777\",\n  strokeOpacity: 1,\n  strokeWeight: 1,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  geodesic: false,\n  zIndex: 0,\n};\n\nconst clustersOptions = {\n  styles: [\n    {\n      textSize: 14,\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m1.png\",\n    },\n    {\n      textSize: 14,\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m2.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m3.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m4.png\",\n    },\n    {\n      height: 66,\n      width: 66,\n      url: process.env.PUBLIC_URL + \"/img/markerclusterer/m5.png\",\n    },\n  ],\n};\n\nexport default Map;\n","import {useState} from 'react';\n\nconst Card = (props)=>{\n    let data = props.value;\n\n    const [showLess, setShowLess] = useState(true);\n    const {setMapParameters} = props;\n    const handleClick = ()=>{\n        setShowLess(!showLess);\n    }\n\n    const handleLocationData = ()=>{\n        let randomNum = Math.random() / 1000000;\n        setMapParameters({\n            center: {lat:data.coordinate.lat + randomNum, lng:data.coordinate.lng + randomNum},\n            polygon: data.coordinate.polygon,\n            zoom: 20 + randomNum,\n            selectMarker: data,\n            closeInfoWindow: false\n        });\n    }\n\n    if(data === 'loading'){\n        return(\n            <div className='card loading'>\n                <div>Loading...</div>\n            </div>);\n    }\n\n    return(\n        <div className='card'>\n            <div className='card-meta'>\n                <div className='card-meta-title'>\n                    <div className='highlighter bgColor_mintGreen-light' style={{width:data.pipeType.length+'em'}}></div>\n                    <div className={`state unselectable ${data.workingState === '是' ? 'working' : 'notWorking'}`}>{data.workingState === '是' ? '施工中' : '未施工'}</div>\n                    <div className='pipeType' style={{position:'relative'}}>\n                        {data.pipeType}\n                    </div>\n                </div>\n                <div className='card-meta-basicInfo'>\n                    <div className='date'>\n                        <span className='slash'>{data.date.start.year}</span><span className='slash'>{data.date.start.month}</span><span>{data.date.start.day}</span><i className=\"fas fa-caret-right fa-lg\"></i><span className='slash'>{data.date.end.year}</span><span className='slash'>{data.date.end.month}</span><span>{data.date.end.day}</span>\n                    </div>\n                    <div className='info'>\n                        <div className='item'>案件類別</div>\n                        <div>{data.constructionType}</div>\n                    </div>\n                    <div className='info'>\n                        <div className='item'>地點</div>\n                        <div>{data.distriction + data.address}</div>\n                    </div>\n                </div>\n                <div className='buttons'>\n                    {(data.coordinate.lat !== 0 && data.coordinate.lat !== 0) &&\n                    <div title='顯示位置' className='buttons-locate' onClick={()=>{handleLocationData()}}>\n                        <i className=\"fas fa-map-marker-alt\"/>\n                    </div>}\n                    <div title='更多資訊' className={showLess ? 'buttons-moreInfo' : 'buttons-moreInfoClicked'} onClick={()=>{handleClick()}}>\n                        <i className={`fas ${showLess ? 'fa-angle-double-down' : 'fa-angle-double-up'}`}/>\n                    </div>\n                </div>\n            </div>\n            <div className={`${showLess && 'noneDisplay'} horiLine`}/>\n            <div className={`${showLess && 'noneDisplay'} card-body`}>\n                <div className='card-body-detailInfo'>\n                    <div className='oneRow'>\n                        <div className='item'>工程名稱</div>\n                        <div className='constructTitle'>{data.title}</div>\n                    </div>\n                    <div>\n                        <div className='item'>申請書編號</div>\n                        <div>{data.applicationNumber}</div>\n                    </div>\n                    <div>\n                        <div className='item'>許可證編號</div>\n                        <div>{data.licenseNumber}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>申請單位</div>\n                        <div>{data.applicant}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>廠商</div>\n                        <div>{data.contractor.name}</div>\n                        <div className='phone'>{data.contractor.phone}</div>\n                    </div>\n                    <div className='oneRow'>\n                        <div className='item'>負責人</div>\n                        <div>{data.personInCharge.name}</div>\n                        <div className='phone'>{data.personInCharge.phone}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","const CloseButton = (props)=>{\n\n    let {handleCloseClick, handleMakerMessageClick} = props;\n\n    const handleClick = ()=>{\n        if(handleCloseClick !== undefined){\n            handleCloseClick();\n        }\n        else if(handleMakerMessageClick !== undefined){\n            handleMakerMessageClick();\n        }\n    }\n\n    return(\n        <div className='closeButtonContainer'>\n            <div className='closeButton' onClick={handleClick}>\n                <i className=\"fas fa-times fa-lg\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default CloseButton;","const Pagination = (props)=>{\n    //必須變數from Card list，依賴Card list\n    //不能用[]\n    const {margin ,pageBtns, pageIndex, isMobile} = props;\n    //PageButtons有自己的handleClick，變數名稱有衝突\n    //另外用一個變數儲存從CardList傳來的handleClick，而不解構賦值\n    const handleBtnClick = props.handlePaginationClick;\n    let returnElement = null;\n    let minPageIndex = 0, maxPageIndex = pageBtns.length - 1;\n\n    const focusPage = (i)=>{\n        if( i === pageIndex ) return 'currentPage';\n    }\n\n    if(pageBtns.length === 1) return null;\n    if(isMobile){\n        let pageBtnsArr = Array.from({length:pageBtns.length}, (_,index)=>index);\n        let selectValue = null;\n        returnElement=\n        <div className='pagination unselectable'>\n            <div className=' pageArrow' key={`prePage`}\n                onClick={()=>{\n                    selectValue = pageIndex-1;\n                    handleBtnClick(selectValue);\n                    if(selectValue > minPageIndex) document.getElementById('pageSelect').value = selectValue;\n                }}\n            >\n                <i className=\"fas fa-chevron-left\"/>\n            </div>\n            <div className='pageElement'>\n                <i className=\"selectArrow fas fa-chevron-down fa-lg\"/>\n                <span>{pageIndex+1}</span>\n                <select id='pageSelect'\n                        value={pageIndex}\n                        onChange={(e)=>handleBtnClick(Number(e.target.value))}\n                >\n                    {\n                        pageBtnsArr.map((i)=>(\n                            <option value={i}\n                                    key={'pageSelect_'+(i+1)}>\n                                {i+1}\n                            </option>\n                        ))\n                    }\n                </select>\n            </div>\n            <div className=' pageArrow' key={`nextPage`}\n                onClick={()=>{\n                    selectValue = pageIndex+1;\n                    handleBtnClick(selectValue);\n                    if(selectValue < maxPageIndex) document.getElementById('pageSelect').value = selectValue;}}\n                >\n                <i className=\"fas fa-chevron-right\"/>\n            </div>\n        </div>;\n    }else{    \n        if(pageBtns.length > 7){\n            if(pageIndex - minPageIndex > 3 && maxPageIndex - pageIndex > 3){\n                let pages = Array.from({length:3},(_,index)=>index+pageIndex-1);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    <div key={'page-'+minPageIndex+1}\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\n                        {minPageIndex+1}\n                    </div>\n                    <div className='pageElement dot'/>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement dot'/>\n                    <div key={'page-'+maxPageIndex+1}\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\n                        {maxPageIndex+1}\n                    </div>\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }else if(pageIndex - minPageIndex <= 3){\n                let pages = Array.from({length:5},(_,index)=>index);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        style={pageIndex===minPageIndex ? {visibility: 'hidden'} : {}}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page-'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement dot'/>\n                    <div key={'page-'+maxPageIndex+1}\n                        onClick={()=>{handleBtnClick(maxPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(maxPageIndex)}`}>\n                        {maxPageIndex+1}\n                    </div>\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }else if(maxPageIndex - pageIndex <= 3){\n                let pages = Array.from({length:5},(_,index)=>index+maxPageIndex-4);\n                returnElement = \n                <div className={`pagination unselectable ${margin}`}>\n                    <div className='pageElement pageArrow' key={`prePage`}\n                        onClick={()=>{handleBtnClick(pageIndex-1)}}>\n                        <i className=\"fas fa-chevron-left\"/>\n                    </div>\n                    <div key={'page-'+minPageIndex+1}\n                        onClick={()=>{handleBtnClick(minPageIndex)}}\n                        className={`pageElement pageBtn ${focusPage(minPageIndex)}`}>\n                        {minPageIndex+1}\n                    </div>\n                    <div className='pageElement dot'/>\n                    {\n                        pages.map((i)=>(\n                            <div key={'page-'+(i+1)}\n                                onClick={()=>{handleBtnClick(i)}}\n                                className={`pageElement pageBtn ${focusPage(i)}`}>\n                                {i+1}\n                            </div>\n                        ))\n                    }\n                    <div className='pageElement pageArrow' key={`nextPage`}\n                        style={pageIndex===maxPageIndex ? {visibility: 'hidden'} : {}}\n                        onClick={()=>{handleBtnClick(pageIndex+1)}}>\n                        <i className=\"fas fa-chevron-right\"/>\n                    </div>\n                </div>\n            }\n        }else{\n            returnElement = \n            <div className={`pagination unselectable ${margin}`}>\n                {\n                    pageBtns.map((i)=>(\n                        <div key={'page-'+(i+1)}\n                            onClick={()=>{handleBtnClick(i)}}\n                            className={`pageElement pageBtn ${focusPage(i)}`}>\n                            {i+1}\n                        </div>\n                    ))\n                }\n            </div>\n        }\n    }\n    return(returnElement);\n}\n\nexport default Pagination;","import { useCallback, useEffect, useState } from \"react\";\nimport DatePicker, { registerLocale } from 'react-datepicker';\nimport zh_TW from 'date-fns/locale/zh-TW';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Selectors = (props)=>{\n\n    const [dateRange, setDateRange] = useState([null, null]);\n    const [startDate, endDate] = dateRange;\n    const [dateOnPicker,setDateOnPicker] = useState('');\n    const [selectValue,setSelectValue] = useState({dist:null,workingState:null});\n    const {options, condition, mapParameters, setCondition, setPageIndex, setMapParameters}= props;\n\n    const INITAIL = useCallback(()=>{\n        let node = document.getElementById('districtionSelect');\n        setCSSChosenValue(node);\n        setCSSChosenValue(node.previousElementSibling, node.value);\n        registerLocale('zh-TW',zh_TW);\n    },[]);\n\n    useEffect(()=>{\n        INITAIL();\n        setSelectValue({dist:getSelectValue('districtionSelect'), workingState:getSelectValue('workingStateSelect')});\n    },[INITAIL]);\n\n    const setCSSChosenValue = (element, value=element.value)=>{\n        element.dataset.chosen = value;\n    }\n\n    const addZero2String = (time)=>{\n        let _time = typeof time === \"number\" ? time.toString() : time;\n        if(_time.length === 1) _time = '0'+_time;\n        return _time;\n    }\n\n    const clearMapInfo = ()=>{\n        setMapParameters({\n            center: {lat : 24.1512535, lng : 120.6617366},\n            polygon: null,\n            zoom: 12 + (Math.random() / 10000), //cluster的顯示問題\n            selectMarker: mapParameters.selectMarker,\n            closeInfoWindow: true\n        });\n    }\n\n    const getSelectValue = (id)=>{\n        let element = document.getElementById(id);\n        let value = null;\n\n        if(element === null) value = '載入中';\n        else{\n            value =  element.value;\n            if(id === 'workingStateSelect'){\n                switch(value){\n                    case '0' : \n                        value = '全案件';\n                        break;\n                    case '是' :\n                        value = '施工中';\n                        break;\n                    case '否' :\n                        value = '未施工';\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if(id === 'districtionSelect' && value === '0'){\n                value = '全地區';\n            }\n        }\n        \n        return value;\n    }\n\n    const convertWorkingState = (value)=>{\n        let state = null;\n        switch(value){\n            case 0 : \n                state = '全案件';\n                break;\n            case '是' :\n                state = '施工中';\n                break;\n            case '否' :\n                state = '未施工';\n                break;\n            default:\n                break;\n        }\n        return state;\n    }\n\n    const handleWorkingState = (e)=>{\n        let dist = condition.distriction;\n        let workingState = Number(e.target.value) === 0 ? 0 : e.target.value;\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\n        let _dateOnPicker = dateOnPicker;\n        let stack = condition.stack;\n        setCSSChosenValue(e.target);\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\n        setSelectValue((prevState)=>({\n            ...prevState,\n            workingState: convertWorkingState(workingState)\n        }));\n\n        if(stack.indexOf('workingState') === -1) stack.push('workingState');\n        else if(workingState === 0){\n            stack = stack.filter((e)=>e!=='workingState');\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('workingState',[workingState, dist, startDate, endDate, _dateOnPicker]);\n        }\n\n        clearMapInfo();\n        setPageIndex(0);\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        else setDateOnPicker('');\n        setCondition({workingState: workingState,\n                      distriction:dist,\n                      date:{\n                        start: startDate === null ? null : {...startDate},\n                        end: endDate === null ? null : {...endDate}\n                      },\n                      stack:stack});\n    }\n    \n    const handleDistChange = (e)=>{\n        let dist = Number(e.target.value) === 0 ? 0 : e.target.value;\n        let workingState = condition.workingState;\n        let startDate = condition.date.start === null ? null : {...condition.date.start};\n        let endDate = condition.date.end === null ? null : {...condition.date.end};\n        let _dateOnPicker = dateOnPicker;\n        let stack = condition.stack;\n        setCSSChosenValue(e.target);\n        setCSSChosenValue(e.target.previousElementSibling, e.target.value);\n        setSelectValue((prevState)=>({\n            ...prevState,\n            dist: dist === 0 ? '全地區' : dist\n        }));\n\n        if(stack.indexOf('distriction') === -1) stack.push('distriction');\n        else if(dist === 0){\n            stack = stack.filter((e)=>e!=='distriction');\n            // [stack, [workingState, dist, startDate, endDate, _dateOnPicker]] = popStack('distriction',[workingState, dist, startDate, endDate, _dateOnPicker]);\n        }\n\n        clearMapInfo();\n        setPageIndex(0);\n        if(_dateOnPicker !== '') setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        else setDateOnPicker('');\n        setCondition({workingState: workingState,\n                      distriction:dist,\n                      date:{\n                          start: startDate === null ? null : {...startDate},\n                          end: endDate === null ? null : {...endDate}\n                      },\n                      stack:stack});\n    }\n\n    const handleDateChange = (update)=>{\n        setDateRange(update);\n        //如果結束日期尚未選擇，只更新date range。\n        if(update[0] !== null && update[1] === null){\n            setDateOnPicker(`${update[0].getFullYear()}/${addZero2String(update[0].getMonth() + 1)}/${addZero2String(update[0].getDate())} -`);\n            return;\n        }\n        //datepicker按清空時執行，日期沒選完不會到這邊。\n        if(update[0] === null && update[1] === null){\n            let stack = condition.stack;\n            let _dist = condition.distriction;\n            let _workingState = condition.workingState;\n            stack = stack.filter((e)=>e!=='date');\n            // [stack, [_workingState, _dist, , , ,]] = popStack('date',[_workingState, _dist, null, null, null])\n\n            clearMapInfo();\n            setDateOnPicker('');\n            setCondition({workingState:_workingState, distriction:_dist, date:{start: null, end: null}, stack:stack});\n            return;\n        }\n\n        let dist = condition.distriction;\n        let workingState = condition.workingState;\n        let startDate = {year: update[0].getFullYear(), month: update[0].getMonth() + 1, day: update[0].getDate()}\n        let endDate = {year: update[1].getFullYear(), month: update[1].getMonth() + 1, day: update[1].getDate()}\n        let stack = condition.stack;\n        if(stack.indexOf('date') === -1) stack.push('date');\n        clearMapInfo();\n        setPageIndex(0);\n        setDateOnPicker(`${startDate.year}/${addZero2String(startDate.month)}/${addZero2String(startDate.day)} - ${endDate.year}/${addZero2String(endDate.month)}/${addZero2String(endDate.day)}`);\n        setCondition({workingState:workingState, distriction:dist, date:{start: {...startDate}, end: {...endDate}}, stack:stack});\n    }\n\n    let workingStateArr = Array.from({length: options.workingState.length},(_,index)=>index);\n    let distArr = Array.from({length: options.distriction.length},(_,index)=>index);\n\n    return(\n        <div className='selectors'>\n            <div className='selectContainer'>\n                <i className=\"selectArrow fas fa-chevron-down\"/>\n                <select name='workingState'\n                        id='workingStateSelect'\n                        defaultValue='是'\n                        onChange={handleWorkingState}\n                >\n                    <option value={0}>全案件</option>\n                    {\n                        workingStateArr.map((i)=>(\n                            <option value={options.workingState[i]} key={options.workingState[i]}>\n                                {options.workingState[i]==='是' ? '施工中' : '未施工'}\n                            </option>\n                        ))\n                    }\n                </select>\n                <span>{selectValue.workingState}</span>\n            </div>\n            <div className='selectContainer'>\n                <i className=\"selectArrow fas fa-chevron-down\"/>\n                <select name='distriction'\n                        id='districtionSelect'\n                        defaultValue='0'\n                        onChange={handleDistChange}\n                >\n                    <option value={0}>全地區</option>\n                    {\n                        distArr.map((i)=>(\n                            <option value={options.distriction[i]} key={options.distriction[i]}>{options.distriction[i]}</option>\n                        ))\n                    }\n                </select>   \n                <span>{selectValue.dist}</span>\n            </div>\n            <DatePicker\n                value={dateOnPicker}\n                locale='zh-TW'\n                wrapperClassName='dateSelectContainer'\n                className='dateSelect'\n                placeholderText='日期範圍'\n                dateFormat='yyyy/MM/dd'\n                selectsRange={true}\n                startDate={startDate}\n                endDate={endDate}\n                minDate={new Date(Object.values(options.date.start))}\n                maxDate={new Date(Object.values(options.date.end))}\n                isClearable\n                shouldCloseOnSelect={false}\n                onChange={handleDateChange}\n                onFocus={e => e.target.blur()}\n            />\n        </div>\n    );\n}\n\nexport default Selectors;","import { useMemo, useState } from 'react';\nimport Card from './Card';\nimport CloseButton from './CloseButton';\nimport Pagination from './Pagination';\nimport Selectors from './Selectors';\n\nconst InfoBlock = (props)=>{\n\n    const {closeInfoBlock, handleCloseClick, isMobile} = props;\n    const [pageIndex, setPageIndex] = useState(0);\n\n    let cardsNum = useMemo(()=>{\n            let arr = [];\n            let length = 0;\n\n            if(props.value === null) return;\n            else if(props.value.length > 1) length =  props.value[pageIndex].length;\n            else if(props.value.length === 1) length =  props.value[0].length;\n            else length = 0;\n\n            arr = Array.from({length: length},(_,index) => index);\n            return(arr);\n    },[props.value, pageIndex]);\n\n    const handlePaginationClick = (x)=>{\n        if(x > (props.value.length - 1) || x < 0) return;\n        document.getElementById('topAnchor').scrollIntoView(false);\n        setPageIndex(x);\n    }\n    \n    const getCSSState = (condition)=>{\n        let state = '';\n        if(condition === null) state = 'hide';\n        else if(condition === true) state = 'close';\n        else if(condition === false) state = 'open';\n        return state;\n    }\n\n    if(props.value === 'loading'){\n        return(\n            <div className={`infoBlockContainer`}>\n            <div className='infoBlock' style={{paddingTop:'0', backgroundColor:'#ececec'}}>\n                <div className='loading'>\n                    <i className=\"fas fa-circle-notch fa-lg\"/>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else if(props.value === null){\n        return(\n            <div className='infoBlockContainer'>\n            <div className='infoBlock'>\n                <div className='noContent'>\n                    <div className='exclamationMark'><i className=\"fas fa-exclamation-triangle fa-lg\"/></div>\n                    <div>發生錯誤，請稍後在試</div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else if(props.length === 0){\n        return(\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\n            <div className='infoBlock'>\n                <CloseButton handleCloseClick={handleCloseClick}/>\n                <div className='toolbarContainer'>\n                    <Selectors\n                        options={props.option}\n                        condition={props.condition}\n                        mapParameters={props.mapParameters}\n                        setCondition={props.setCondition}\n                        setMapParameters={props.setMapParameters}\n                        setPageIndex={setPageIndex}\n                    />\n                </div>\n                <div className='cardsListContainer'>\n                <div className='cardsList'>\n                    <div className='noContent'>\n                        沒有符合條件的資料\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n    else{\n        let pageBtns = Array.from({length: props.value.length},(_,index)=>index);\n        return(\n            <div className={`infoBlockContainer ${getCSSState(closeInfoBlock)}`}>\n            {/* <div className={`infoBlockContainer ${closeInfoBlock ? 'close':'open'}`}> */}\n            <div className='infoBlock'>\n                <CloseButton handleCloseClick={handleCloseClick}\n                />\n                <div className='toolbarContainer'>\n                    <Selectors\n                        options={props.option}\n                        condition={props.condition}\n                        setCondition={props.setCondition}\n                        setPageIndex={setPageIndex}\n                        mapParameters={props.mapParameters}\n                        setMapParameters={props.setMapParameters}\n                    />\n                </div>\n                <div className='cardsListContainer'>\n                <div className='cardsList'>\n                    <Pagination\n                        pageBtns={pageBtns}\n                        pageIndex={pageIndex}\n                        handlePaginationClick={handlePaginationClick}\n                        isMobile={isMobile}\n                    />\n                    <div id='topAnchor' style={{marginBottom:'2em'}}/>\n                    {\n                        cardsNum.map((i)=>(\n                            <Card key={'card'+(pageIndex*10+i+1)}\n                                value={props.value[pageIndex][i]}\n                                setMapParameters={props.setMapParameters}\n                            />\n                        ))\n                    }\n                    <Pagination\n                        pageBtns={pageBtns}\n                        pageIndex={pageIndex}\n                        handlePaginationClick={handlePaginationClick}\n                        isMobile={isMobile}\n                    />\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default InfoBlock;","const InfoButton = (props)=>{\n\n    let {closeInfoBlock, makerMessage, handleCloseClick, handleMakerMessageClick, userLocation, mapParameters, setMapParameters} = props;\n\n    const handleLocationClick = ()=>{\n        let randomNum = Math.random() / 1000000;\n        setMapParameters({\n            center: {lat:userLocation.lat + randomNum, lng:userLocation.lng + randomNum},\n            polygon: mapParameters.polygon,\n            zoom: mapParameters.zoom,\n            selectMarker: mapParameters.selectMarker,\n            closeInfoWindow: false\n        });\n    }\n\n    return(\n        <div className={`infoButtonContainer ${(closeInfoBlock !== false && makerMessage !== true) ? 'open':'close'}`}>\n            <div className='button' onClick={handleCloseClick}>\n                <i className=\"fas fa-search fa-lg\"/>\n            </div>\n            <div className='button' onClick={handleLocationClick} style={{display:userLocation===null ? 'none' : ''}}>\n                <i className=\"fas fa-map-marker-alt fa-lg\"/>\n            </div>\n            <div className='button' onClick={()=>{\n                handleMakerMessageClick();\n            }}>\n                <i className=\"fas fa-info fa-lg\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default InfoButton;","import CloseButton from \"./CloseButton\";\nconst MakerMessage = (props)=>{\n\n    let {makerMessage, handleMakerMessageClick} = props;\n\n    const getCSSState = (condition)=>{\n        let state = '';\n        if(condition === null) state = 'hide';\n        else if(condition === true) state = 'open';\n        else if(condition === false) state = 'close';\n        return state;\n    }\n\n    return(\n        <div className={`infoBlockContainer ${getCSSState(makerMessage)}`}>\n        <div className='infoBlock maker'>\n            <CloseButton handleMakerMessageClick={handleMakerMessageClick}/>\n            <div className='makerMessage flex'>\n                <img src={process.env.PUBLIC_URL+'/img/logo.png'} alt={'Kai\\'s logo'}/>\n                <article>\n                    <p>嗨，我是Kai。</p>\n                    <p>台中道路施工地圖是為了練習API串接所做的side project。</p>\n                    <p>還有很多細節需要改進，還有太多太多的知識要學習。學海無涯，只能繼續精進。</p>\n                </article>\n                <div/>\n                <div className='socialMedia'>\n                    <a href='https://github.com/TKaiC666' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-github fa-lg\"/>\n                    </a>\n                    <a href='https://www.facebook.com/profile.php?id=100002803117493' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-facebook fa-lg\"/>\n                    </a>\n                    <a href='https://www.instagram.com/attifmai/' target='_blank' rel=\"noreferrer\">\n                        <i className=\"fab fa-instagram fa-lg\"/>\n                    </a>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default MakerMessage;","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Map from \"./Map\";\nimport InfoBlock from \"./InfoBlock\";\nimport InfoButton from \"./InfoButton\";\nimport MakerMessage from \"./MakerMessage\";\n\nconst TaichungRCIApp = () => {\n  const [isMobile, setIsMobile] = useState(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [closeInfoBlock, setCloseInfoBlock] = useState(null);\n  const [makerMessage, setMakerMessage] = useState(null);\n  const [constructionsData, setConstructionsData] = useState(\"loading\");\n  const [condition, setCondition] = useState({\n    workingState: \"是\",\n    distriction: 0,\n    date: { start: null, end: null },\n    stack: [\"workingState\"],\n  });\n  const [mapParameters, setMapParameters] = useState({\n    center: { lat: 24.1512535, lng: 120.6617366 },\n    polygon: null,\n    zoom: 12,\n    selectMarker: null,\n    closeInfoWindow: null,\n  });\n\n  const INITAIL = useCallback(() => {\n    let bool = null;\n    changeInfoWindowHeight();\n    bool = isWidthUnder(428);\n    window.addEventListener(\"resize\", changeInfoWindowHeight);\n    window.addEventListener(\"resize\", () => isWidthUnder(428));\n    findUserLocation();\n    initialInfoBlockDisplay(bool);\n  }, []);\n\n  const findUserLocation = () => {\n    const handleUserLocation = (position) => {\n      let _mapParameters = {\n        center: {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        },\n        polygon: null,\n        zoom: 12,\n        selectMarker: null,\n        closeInfoWindow: null,\n      };\n      setMapParameters(_mapParameters);\n      setUserLocation(_mapParameters.center);\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        handleUserLocation(position);\n      });\n    } else {\n      console.log(\"geolocation is not available\");\n    }\n  };\n\n  const initialInfoBlockDisplay = (bool) => {\n    if (bool === false) {\n      setCloseInfoBlock(false);\n    }\n  };\n\n  const changeInfoWindowHeight = () => {\n    document.documentElement.style.setProperty(\n      \"--vh\",\n      `${window.innerHeight / 100}px`\n    );\n  };\n\n  const isWidthUnder = (width) => {\n    let bool = null;\n    if (window.innerWidth <= width) bool = true;\n    else bool = false;\n    setIsMobile(bool);\n    return bool;\n  };\n\n  const convertDate2Num = (date) => {\n    let [year, month, day] = Object.values(date);\n    year = year.toString();\n    month = month.toString();\n    day = day.toString();\n\n    if (month.length === 1) month = \"0\" + month;\n    if (day.length === 1) day = \"0\" + day;\n\n    return parseInt(year + month + day, 10);\n  };\n\n  const sliceData = (data) => {\n    let _data = data;\n    let newData = [];\n    for (let i = 0; i < _data.length; i += 10) {\n      newData.push(_data.slice(i, i + 10));\n    }\n    return newData;\n  };\n\n  const fetchData = useCallback(() => {\n    const reconstructData = (data) => {\n      function convertData(data) {\n        const convertStringCoor2Num = (lat, lng) => {\n          let locationObject = { lat: 0, lng: 0 };\n          locationObject.lat = Number(lat);\n          locationObject.lng = Number(lng);\n\n          return locationObject;\n        };\n\n        /**\n         * @todo: use WKT converter to process\n         */\n        const splitPolygonData = (polygon) => {\n          // workaround\n          const POLYGON_PATTERN = /^POLYGON\\(\\(.*\\)\\)$/;\n          if (!POLYGON_PATTERN.test(polygon.replace(/\\s/g, \"\"))) return null;\n          const POLYGON_PREFIX = \"POLYGON((\";\n          const POLYGON_SUFFIX = \"))\";\n          const COMMA = \",\";\n          const polygonCoordinate = polygon\n            .replace(/\\s/g, \"\")\n            .split(POLYGON_PREFIX)[1]\n            .split(POLYGON_SUFFIX)[0]\n            .split(COMMA)\n            .map((coordinate) => {\n              const TAICHUNG_LATITUDE = \"24.\";\n              const [lngString, wrongLatString] =\n                coordinate.split(TAICHUNG_LATITUDE);\n              const latString = TAICHUNG_LATITUDE + wrongLatString;\n              return { lat: Number(latString), lng: Number(lngString) };\n            });\n\n          return polygonCoordinate;\n        };\n\n        let convertPart = {\n          date: {\n            start: {\n              year: Number(data[\"核准起日\"].substring(0, 3)) + 1911,\n              month: Number(data[\"核准起日\"].substring(3, 5)),\n              day: Number(data[\"核准起日\"].substring(5)),\n            },\n            end: {\n              year: Number(data[\"核准迄日\"].substring(0, 3)) + 1911,\n              month: Number(data[\"核准迄日\"].substring(3, 5)),\n              day: Number(data[\"核准迄日\"].substring(5)),\n            },\n          },\n          personInCharge: {\n            name: data[\"承辦人\"].substring(0, 1) + \"◯◯\",\n          },\n          coordinate: {\n            lat: convertStringCoor2Num(data[\"中心點Y坐標\"], data[\"中心點X坐標\"])\n              .lat,\n            lng: convertStringCoor2Num(data[\"中心點Y坐標\"], data[\"中心點X坐標\"])\n              .lng,\n            polygon: splitPolygonData(data[\"施工範圍坐標\"]),\n          },\n        };\n\n        return convertPart;\n      }\n\n      let convertedPart = convertData(data);\n\n      let newData = {\n        title: data[\"工程名稱\"],\n        distriction: data[\"區域名稱\"],\n        address: data[\"地點\"],\n        pipeType: data[\"管線工程類別\"],\n        constructionType: data[\"案件類別\"],\n        workingState: data[\"是否開工\"],\n        date: {\n          start: {\n            year: convertedPart.date.start.year,\n            month: convertedPart.date.start.month,\n            day: convertedPart.date.start.day,\n          },\n          end: {\n            year: convertedPart.date.end.year,\n            month: convertedPart.date.end.month,\n            day: convertedPart.date.end.day,\n          },\n        },\n        applicationNumber: data[\"申請書編號\"],\n        licenseNumber: data[\"許可證編號\"],\n        applicant: data[\"申請單位\"],\n        contractor: {\n          name: data[\"廠商名稱\"],\n          phone: data[\"廠商電話\"],\n        },\n        personInCharge: {\n          name: convertedPart.personInCharge.name,\n          phone: data[\"承辦人電話\"],\n        },\n        coordinate: {\n          lat: convertedPart.coordinate.lat,\n          lng: convertedPart.coordinate.lng,\n          polygon: convertedPart.coordinate.polygon,\n        },\n      };\n\n      return newData;\n    };\n\n    const handleData = (data) => {\n      let _data = data;\n      let newData = [];\n      for (let i = 0; i < _data.length; i++) {\n        newData.push(reconstructData(_data[i]));\n      }\n      return newData;\n    };\n\n    const fetchingData = () => {\n      console.time(\"fetch花費時間\");\n      fetch(process.env.REACT_APP_API_URL)\n        .then((response) => {\n          console.timeEnd(\"fetch花費時間\");\n          if (response.status === 200) {\n            return response.text();\n          }\n          throw new Error(\"response was not ok.\");\n        })\n        .then((data) => {\n          if (data[0] !== \"[\") {\n            console.error(\"fetch error : \\n\", data);\n            setConstructionsData(null);\n          } else {\n            let newData = handleData(JSON.parse(data));\n            setConstructionsData(newData);\n          }\n        })\n        .catch((error) => {\n          console.error(\"fetch error : \", error.message);\n          setConstructionsData(null);\n        });\n    };\n\n    fetchingData();\n  }, []);\n\n  useEffect(() => {\n    INITAIL();\n    fetchData();\n  }, [INITAIL, fetchData]);\n\n  const filteredData = useMemo(() => {\n    const filteringData = (condition) => {\n      let data = constructionsData;\n      let newData = [];\n      if (data === null || data === \"loading\") {\n        newData = data;\n      } else if (condition.stack.length === 3) {\n        newData = data.filter(\n          (object) =>\n            ((convertDate2Num(condition.date.start) >=\n              convertDate2Num(object.date.start) &&\n              convertDate2Num(condition.date.start) <=\n                convertDate2Num(object.date.end)) ||\n              (convertDate2Num(condition.date.end) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.end) <=\n                  convertDate2Num(object.date.end))) &&\n            object.workingState === condition.workingState &&\n            object.distriction === condition.distriction\n        );\n      } else if (condition.stack.length === 2) {\n        if (condition.stack.indexOf(\"date\") !== -1) {\n          let anotherCondition =\n            condition.stack[1 - condition.stack.indexOf(\"date\")];\n          newData = data.filter(\n            (object) =>\n              ((convertDate2Num(condition.date.start) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.start) <=\n                  convertDate2Num(object.date.end)) ||\n                (convertDate2Num(condition.date.end) >=\n                  convertDate2Num(object.date.start) &&\n                  convertDate2Num(condition.date.end) <=\n                    convertDate2Num(object.date.end))) &&\n              object[anotherCondition] === condition[anotherCondition]\n          );\n        } else {\n          newData = data.filter(\n            (object) =>\n              object.workingState === condition.workingState &&\n              object.distriction === condition.distriction\n          );\n        }\n      } else if (condition.stack.length === 1) {\n        if (condition.distriction !== 0) {\n          newData = data.filter(\n            (object) => object.distriction === condition.distriction\n          );\n        } else if (\n          condition.date.start !== null &&\n          condition.date.end !== null\n        ) {\n          newData = data.filter(\n            (object) =>\n              (convertDate2Num(condition.date.start) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.start) <=\n                  convertDate2Num(object.date.end)) ||\n              (convertDate2Num(condition.date.end) >=\n                convertDate2Num(object.date.start) &&\n                convertDate2Num(condition.date.end) <=\n                  convertDate2Num(object.date.end))\n          );\n        } else if (condition.workingState !== 0) {\n          newData = data.filter(\n            (object) => object.workingState === condition.workingState\n          );\n        }\n      }\n\n      return newData;\n    };\n\n    let newData = filteringData(condition);\n    return newData;\n  }, [condition, constructionsData]);\n\n  const selectorsOptions = useMemo(() => {\n    let _stack = condition.stack;\n    let _options = {\n      workingState: [],\n      distriction: [],\n      date: { start: {}, end: {} },\n    };\n    if (\n      _stack.length >= 0 &&\n      constructionsData !== \"loading\" &&\n      constructionsData !== null\n    ) {\n      _options.date.start = { ...constructionsData[0].date.start };\n      _options.date.end = { ...constructionsData[0].date.end };\n      for (let object of constructionsData) {\n        if (_options.workingState.indexOf(object.workingState) === -1)\n          _options.workingState.push(object.workingState);\n        if (_options.distriction.indexOf(object.distriction) === -1)\n          _options.distriction.push(object.distriction);\n        if (\n          convertDate2Num(object.date.start) <=\n          convertDate2Num(_options.date.start)\n        )\n          _options.date.start = { ...object.date.start };\n        if (\n          convertDate2Num(object.date.end) >= convertDate2Num(_options.date.end)\n        )\n          _options.date.end = { ...object.date.end };\n      }\n    }\n    return _options;\n  }, [condition.stack, constructionsData]);\n\n  const handleCloseClick = () => {\n    let _closeInfoBlock = closeInfoBlock;\n    if (_closeInfoBlock !== null) {\n      _closeInfoBlock = !_closeInfoBlock;\n    } else _closeInfoBlock = false;\n    setCloseInfoBlock(_closeInfoBlock);\n  };\n\n  const handleMakerMessageClick = () => {\n    let _makerMessage = makerMessage;\n    if (makerMessage !== null) {\n      _makerMessage = !_makerMessage;\n    } else _makerMessage = true;\n    setMakerMessage(_makerMessage);\n  };\n\n  if (constructionsData === \"loading\" || constructionsData === null) {\n    return (\n      <div>\n        <Map\n          constructionsData={null}\n          mapParameters={mapParameters}\n          setMapParameters={setMapParameters}\n        />\n        <InfoBlock value={constructionsData} />\n      </div>\n    );\n  } else {\n    let data = null;\n    if (\n      condition.distriction === 0 &&\n      condition.date.start === null &&\n      condition.date.end === null &&\n      condition.workingState === 0\n    ) {\n      data = constructionsData;\n    } else {\n      data = filteredData;\n    }\n    return (\n      <div className=\"container\">\n        <Map\n          constructionsData={sliceData(data)}\n          mapParameters={mapParameters}\n          closeInfoBlock={closeInfoBlock}\n          setMapParameters={setMapParameters}\n          makerMessage={makerMessage}\n          isMobile={isMobile}\n          userLocation={userLocation}\n        />\n        <InfoButton\n          closeInfoBlock={closeInfoBlock}\n          makerMessage={makerMessage}\n          handleCloseClick={handleCloseClick}\n          handleMakerMessageClick={handleMakerMessageClick}\n          userLocation={userLocation}\n          mapParameters={mapParameters}\n          setMapParameters={setMapParameters}\n        />\n        <InfoBlock\n          value={sliceData(data)}\n          length={data.length}\n          option={selectorsOptions}\n          condition={condition}\n          mapParameters={mapParameters}\n          closeInfoBlock={closeInfoBlock}\n          isMobile={isMobile}\n          handleCloseClick={handleCloseClick}\n          setCondition={setCondition}\n          setMapParameters={setMapParameters}\n        />\n        <MakerMessage\n          makerMessage={makerMessage}\n          handleMakerMessageClick={handleMakerMessageClick}\n        />\n      </div>\n    );\n  }\n};\n\nexport default TaichungRCIApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TaichungRCIApp from './component/TaichungRCIApp';\nimport './index.css';\nimport '../node_modules/@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <TaichungRCIApp/>\n    </React.StrictMode>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}